
class BeamSpot_Railgun:HDActor{
	default{
		+nointeraction //+noblockmap
		+forcexybillboard
		height 0.1;radius 0.1;
		renderstyle "add";
	}
	override void postbeginplay(){
		super.postbeginplay();
		changetid(TB_BEAMSPOTTID);
	}
	void A_Flicker(){
		alpha=frandom(0.1,1.);
		double amt=frandom(0.6,1.3);
		scale=(randompick(1,-1),1.)*amt;
		if(!random(0,7))HDMobAI.Frighten(self,256);
	}
	void A_BeamSpotBoom(){
		if(!target){ //how would this even happen?
			spawn("HDExplosion",pos,ALLOW_REPLACE);
			A_Explode();
			return;
		}
		double tgtdist=distance3d(target)-64;

		//arc lightning back to owner
		vector2 oldface=(angle,pitch);
		A_FaceTarget(0,0,FAF_TOP);
		target.A_CustomRailgun(
			random(120,240),0,"","azure",
			RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,
			0,40.0,"HDArcPuff",0,0,
			tgtdist,12,0.4,2.0,"",-4
		);
		angle=oldface.x;pitch=oldface.y;
		//spawn little cracks along the way
		vector3 toshooter=vec3to(target).unit();
		for(int i=0;i<tgtdist;i+=64){
			let aaa=spawn("ThunderCracker_Railgun",pos+toshooter*i,ALLOW_REPLACE);
			if(aaa)aaa.target=target;
		}

		A_SprayDecal("BusterScorch",16);
		target.A_StartSound("world/explode",15,volume:0.5);

		//flash player's muzzle
		let hdp=hdplayerpawn(target);
		if(
			hdp
			&&hdp.player
		){
			let tbt=thunderbuster(target.player.readyweapon);
			if(tbt){
				hdp.recoilfov*=0.7;
				hdp.A_MuzzleClimb(
					(frandom(1.2,1.8),-frandom(4.0,5.4)),
					(frandom(0.8,1.2),-frandom(3.4,4.2)),
					(frandom(0.4,0.8),-frandom(2.4,2.4)),
					(-frandom(0.4,1.0),frandom(2.8,2.8))
				);
				hdp.player.setpsprite(PSP_FLASH,tbt.findstate("flash"));
				hdp.A_ChangeVelocity(
					cos(pitch)*-frandom(1,3),0,
					sin(pitch)*frandom(1,3),
					CVF_RELATIVE
				);
				tbt.weaponstatus[TBS_HEAT]+=70;
				tbt.weaponstatus[TBS_WARMUP]=0;
			}
		}

		//blast heat and shit		
		A_HDBlast(
			420,random(96,256),128,"slashing",
			pushradius:420,pushamount:256,
			immolateradius:128,immolateamount:-200,immolatechance:90
		);
		
		DistantQuaker.Quake(self,
			5,50,2048,8,128,256,256
		);

		//check floor and ceiling and spawn more debris
		DistantNoise.Make(self,"world/tbfar");
		for(int i=0;i<3;i++)A_SpawnItemEx("WallChunker",
			frandom(-4,4),frandom(-4,4),-4,
			flags:SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS
		);

		//"open" a door or window
		doordestroyer.destroydoor(self,frandom(1,frandom(128,196)),frandom(1,frandom(16,64)));
	}
	void A_CheckNeighbourSpots(){
		array<actor>beamspots;
		actoriterator it=level.createactoriterator(TB_BEAMSPOTTID,"BeamSpot");
		while(master=it.Next()){
			if(!BeamSpot(master))continue;
			double dist=master.distance3d(self)*0.01;
			if(dist<8){
				stamina+=int(21-dist);
				if(master!=self)beamspots.push(master);
				if(master.stamina>21)master.setstatelabel("glow");
				else master.setstatelabel("spawn2");
			}
		}
		if(stamina>=144){
			for(int i=0;i<beamspots.size();i++){
				if(beamspots[i])beamspots[i].destroy();
			}
			setstatelabel("explode");
		}
		else if(stamina>=21)setstatelabel("glow");
	}
	states{
	spawn:
		TNT1 A 0 nodelay A_CheckNeighbourSpots();
	spawn2:
		TNT1 A 3 A_StartSound("weapons/plasidle",CHAN_WEAPON,volume:0.4);
		stop;
	glow:
		PLSE A 0 A_SpawnItemEx("BeamSpotLight",flags:SXF_NOCHECKPOSITION|SXF_SETTARGET);
		PLSE A 0 A_SprayDecal("PlasmaShock",14);
		PLSE A 1 A_StartSound("weapons/plasidle",CHAN_WEAPON,volume:0.8);
		PLSE AAAA 1 A_Flicker();
		stop;
	explode:
		TNT1 A 0 A_BeamSpotBoom();
		//TNT1 AAAA 0 Spawn("HDExplosion",pos+(frandom(-4,4),frandom(-4,4),frandom(-4,4)),ALLOW_REPLACE);
		TNT1 AAAA 0 Spawn("HDSmoke",pos+(frandom(-4,4),frandom(-4,4),frandom(-4,4)),ALLOW_REPLACE);
		stop;
	}
}

class ThunderCracker_Railgun:IdleDummy{
	states{
	spawn:
		TNT1 A 1;
		TNT1 A 10 A_StartSound("weapons/tbfar");
		TNT1 A 20 A_AlertMonsters();
		stop;
	}
}

class Railgun_Sparker:IdleDummy{
	states{
	spawn:
		TNT1 AAAAAAAAAAAAAAAAAA random(1,4) ArcZap(self);
		stop;
	}
}

class HDB_RailgunBolt:HDBulletActor{
	//bool charge;
	default{
		missiletype "HDSmokeWP_Trail";
		pushfactor 0.05;
		mass 5000;
		speed HDCONST_MPSTODUPT*1500;
		accuracy 600;
		stamina 800; //8mm EC
		hdbulletactor.hardness 5;
		woundhealth 1;
		//hdbulletactor.distantsound "world/riflefar";
	}
	
	override double penetration(){
		//the fuck power!!!!
		double pen=
			speed
			/(
				(HDCONST_MPSTODUPT*15000./750.)
			)
		;
		if(hd_debug>1)console.printf(getclassname().." penetration:  "..pen.."   "..realpos.x..","..realpos.y);
		return pen;
	}


	override actor Puff(){
		vector3 vu=(-cos(pitch)*(cos(angle),sin(angle)),sin(pitch));
		vector3 pv=pos+vu;
		
		for(int i=0;i<20;i++){
			let bbb=spawn("HugeWallChunk",pv+(frandom(-1,1),frandom(-1,1),frandom(-1,1)));
			bbb.vel=(frandom(-4,4),frandom(-4,4),frandom(-1,4))+vu;
			bbb.scale*=frandom(0.3,1.2);
		}
		let ppp=HDBulletActor.puff();
		if(ppp){
			ppp.A_StartSound("misc/bigbulhol",CHAN_BODY,CHANF_OVERLAP);
			ppp.spawn("LingeringThunder",pos,ALLOW_REPLACE);
			ppp.spawn("HDWPSmokeChunkA",pos,ALLOW_REPLACE);
			ppp.spawn("Railgun_Sparker",pos,ALLOW_REPLACE);
		}
		return ppp;
	}

	override void Detonate(){
		if(max(abs(pos.x),abs(pos.y))>=32768)return;

		vector2 facingpoint=(cos(angle),sin(angle));
		setorigin(pos-(2*facingpoint,0),false);

		A_SprayDecal("BrontoScorch",16);
		
		if(vel==(0,0,0))A_ChangeVelocity(cos(pitch),0,-sin(pitch),CVF_RELATIVE|CVF_REPLACE);
		else vel*=0.01;
		if(tracer){ //warhead damage
			int dmg=random(1000,1200);

			//find the point at which it would pierce the middle
			vector3 hitpoint=pos+vel.unit()*tracer.radius;

			//find the "heart" point on the victim
			vector3 tracmid=(tracer.pos.xy,tracer.pos.z+tracer.height*0.618);

			dmg=int((1.-((hitpoint-tracmid).length()/tracer.radius))*dmg);
			tracer.damagemobj(
				self,target,
				dmg,
				"Piercing",DMG_THRUSTLESS
			);
		}
		doordestroyer.destroydoor(self,128,frandom(67,70),6,dedicated:true);
		A_HDBlast(
			fragradius:256,fragtype:"HDB_fragBronto",
			immolateradius:64,immolateamount:random(4,20),immolatechance:32,
			source:target
		);
		DistantQuaker.Quake(self,3,35,256,12);
		actor aaa=Spawn("WallChunker",pos,ALLOW_REPLACE);
		A_SpawnChunks("BigWallChunk",20,4,20);
		A_SpawnChunks("HDSmoke",4,1,7);
		aaa=spawn("HDExplosion",pos,ALLOW_REPLACE);aaa.vel.z=2;
		aaa=spawn("LingeringThunder",pos,ALLOW_REPLACE);
		
		A_SpawnChunks("HDWPSmokeChunkA",4,12,15);
		A_SpawnChunks("HDWPSmokeChunkB",2,17,25);
		
		aaa=spawn("HDExplosionWP",self.pos-(0,0,1),ALLOW_REPLACE);
				aaa.target=target;aaa.master=master;aaa.stamina=stamina;
				aaa.scale.x=2.3;aaa.scale.y=2.3;
		distantnoise.make(aaa,"world/rocketfar");
		A_SpawnChunks("HDSmokeChunk",random(3,4),6,12);
		HDMobAI.HDNoiseAlert(target,self);
		
		

		bmissile=false;
		bnointeraction=true;
		vel=(0,0,0);
		if(!instatesequence(curstate,findstate("death")))setstatelabel("death");
	}
	
	
	override void HitGeometry(line hitline, sector hitsector, int hitside, int hitpart, vector3 vu, double lastdist)
	{
		A_SprayDecal(speed > 400 ? "BrontoScorch" : "BulletChipGiant", 4);
		super.HitGeometry(hitline, hitsector, hitside, hitpart, vu, lastdist);
		angle -= 180;
		A_SprayDecal(speed > 400 ? "BrontoScorch" : "BulletChipGiant", 4);
		angle += 180;
		
		spawn("LingeringThunder",pos,ALLOW_REPLACE);
	}
	
}

//too lazy to make HDB_RailgunBolt also handle a low power version

class HDB_RailgunBolt_LP:HDBulletActor{
	//bool charge;
	default{
		missiletype "HDSmokeWP_Trail";
		pushfactor 0.05;
		mass 5000;
		speed HDCONST_MPSTODUPT*550;
		accuracy 600;
		stamina 800; //8mm EC
		hdbulletactor.hardness 5;
		woundhealth 1;
		//hdbulletactor.distantsound "world/riflefar";
	}
	
	override double penetration(){
		//the fuck power!!!!
		double pen=
			speed
			/(
				(HDCONST_MPSTODUPT*5500./350.)
			)
		;
		if(hd_debug>1)console.printf(getclassname().." penetration:  "..pen.."   "..realpos.x..","..realpos.y);
		return pen;
	}


	override actor Puff(){
		vector3 vu=(-cos(pitch)*(cos(angle),sin(angle)),sin(pitch));
		vector3 pv=pos+vu;
		
		for(int i=0;i<20;i++){
			let bbb=spawn("HugeWallChunk",pv+(frandom(-1,1),frandom(-1,1),frandom(-1,1)));
			bbb.vel=(frandom(-4,4),frandom(-4,4),frandom(-1,4))+vu;
			bbb.scale*=frandom(0.3,1.2);
		}
		let ppp=HDBulletActor.puff();
		if(ppp){
			ppp.A_StartSound("misc/bigbulhol",CHAN_BODY,CHANF_OVERLAP);
			ppp.spawn("Railgun_Sparker",pos,ALLOW_REPLACE);
			ppp.spawn("HDWPSmokeChunkA",pos,ALLOW_REPLACE);
		}
		return ppp;
	}

	override void Detonate(){
		if(max(abs(pos.x),abs(pos.y))>=32768)return;

		vector2 facingpoint=(cos(angle),sin(angle));
		setorigin(pos-(2*facingpoint,0),false);

		A_SprayDecal("BrontoScorch",16);
		
		if(vel==(0,0,0))A_ChangeVelocity(cos(pitch),0,-sin(pitch),CVF_RELATIVE|CVF_REPLACE);
		else vel*=0.01;
		if(tracer){ //warhead damage
			int dmg=random(1000,1200);

			//find the point at which it would pierce the middle
			vector3 hitpoint=pos+vel.unit()*tracer.radius;

			//find the "heart" point on the victim
			vector3 tracmid=(tracer.pos.xy,tracer.pos.z+tracer.height*0.618);

			dmg=int((1.-((hitpoint-tracmid).length()/tracer.radius))*dmg);
			tracer.damagemobj(
				self,target,
				dmg,
				"Piercing",DMG_THRUSTLESS
			);
		}
		doordestroyer.destroydoor(self,128,frandom(67,70),6,dedicated:true);
		A_HDBlast(
			fragradius:256,fragtype:"HDB_fragBronto",
			immolateradius:64,immolateamount:random(4,20),immolatechance:32,
			source:target
		);
		DistantQuaker.Quake(self,3,35,256,12);
		actor aaa=Spawn("WallChunker",pos,ALLOW_REPLACE);
		A_SpawnChunks("BigWallChunk",15,4,20);
		A_SpawnChunks("HDSmoke",4,1,7);
		aaa=spawn("HDExplosion",pos,ALLOW_REPLACE);aaa.vel.z=2;
		distantnoise.make(aaa,"world/rocketfar");
		A_SpawnChunks("HDSmokeChunk",random(3,4),6,12);
		HDMobAI.HDNoiseAlert(target,self);
		
		A_SpawnChunks("HDWPSmokeChunkA",2,12,15);

		bmissile=false;
		bnointeraction=true;
		vel=(0,0,0);
		if(!instatesequence(curstate,findstate("death")))setstatelabel("death");
	}
	
	
	override void HitGeometry(line hitline, sector hitsector, int hitside, int hitpart, vector3 vu, double lastdist)
	{
		A_SprayDecal(speed > 400 ? "BrontoScorch" : "BulletChipGiant", 4);
		super.HitGeometry(hitline, hitsector, hitside, hitpart, vu, lastdist);
		angle -= 180;
		A_SprayDecal(speed > 400 ? "BulletChipGiant" : "BrontoScorch", 4);
		angle += 180;
	}
	
}

