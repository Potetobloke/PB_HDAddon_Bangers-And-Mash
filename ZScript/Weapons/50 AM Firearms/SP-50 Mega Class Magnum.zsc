class HD_AutoMag:HDHandgun{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "SP-50 Auto Mag"
		//$Sprite "5MCPA0"
		+hdweapon.fitsinbackpack
		+hdweapon.reverseguninertia
		scale 0.63;
		weapon.selectionorder 95;
		weapon.slotpriority 0.996;
		weapon.slotnumber 2;
		weapon.kickback 30;
		weapon.bobrangex 0.27;
		weapon.bobrangey 0.7;
		weapon.bobspeed 2.5;
		weapon.bobstyle "normal";
		obituary "%k assumed %o was carrying their 2nd pistol.";
		inventory.pickupmessage "You got the magnum handgun!";
		tag "$TAG_AUTOMAG";
		hdweapon.refid HDLD_50PSTL;
		inventory.maxamount 3;
		
			hdweapon.loadoutcodes "
			\cuselectfire - 0/1, whether it has a fire selector
			\cufiremode - 0/1, semi/auto, subject to the above";
	}
	override double weaponbulk(){
		int mgg=weaponstatus[PI50_MAG];
		return 39+(mgg<0?0:(ENC_50AMMAG_LOADED+mgg*ENC_50AM_LOADED));
	}
	override double gunmass(){
		return 10;
	}
	override void failedpickupunload(){
		failedpickupunloadmag(PI50_MAG,"HD50AM_Mag");
	}
	override string,double getpickupsprite(){
		string spr;
		if(weaponstatus[PI50_CHAMBER]<1){
			if(weaponstatus[0]&PI5F_SELECTFIRE)spr="D";
			else spr="B";
		}else{
			if(weaponstatus[0]&PI5F_SELECTFIRE)spr="C";
			else spr="A";
		}
		return "5MCP"..spr.."0",1.;
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("HD50AM_Mag")));
			if(nextmagloaded>=8){
				sb.drawimage("50AMNORM",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM);
			}else if(nextmagloaded<1){
				sb.drawimage("50AMEMPTY",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.);
			}else sb.drawbar(
				"50AMNORM","50AMGREY",
				nextmagloaded,8,
				(-46,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("HD50AM_Mag"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM);
		}
		if(hdw.weaponstatus[0]&PI5F_SELECTFIRE)sb.drawwepcounter(hdw.weaponstatus[0]&PI5F_FIREMODE,
			-22,-10,"RBRSA3A7","STFULAUT"
		);
		sb.drawwepnum(hdw.weaponstatus[PI50_MAG],8);
		if(hdw.weaponstatus[PI50_CHAMBER]==2)sb.drawwepdot(-16,-10,(3,1));
	}
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..((weaponstatus[0]&PI5F_SELECTFIRE)?(WEPHELP_FIREMODE.."  Semi/Auto\n"):"")
		..WEPHELP_ALTRELOAD.."  Quick-Swap (if available)\n"
		..WEPHELP_RELOAD.."  Reload mag\n"
		..WEPHELP_USE.."+"..WEPHELP_RELOAD.."  Reload chamber\n"
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOADUNLOAD
		;
	}
	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
		int scaledyoffset=47;
			double dotoff=max(abs(bob.x),abs(bob.y));
			if(dotoff<20){
				sb.drawimage(
					whichdot,(0,0)+bob*1.6,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
					alpha:0.8-dotoff*0.04
				);
			}
			sb.drawimage(
				"MCS_0000",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER
			);
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,10);
			if(owner.countinv("HD50AM_Ammo"))owner.A_DropInventory("HD50AM_Ammo",amt*8);
			else owner.A_DropInventory("HD50AM_Mag",amt);
		}
	}
	action void A_CheckPistolHand(){
		if(invoker.wronghand)player.getpsprite(PSP_WEAPON).sprite=getspriteindex("6MCGA0");
	}
	states{
	select0:
		5MCG A 0{
			if(!countinv("NulledWeapon"))invoker.wronghand=false;
			A_TakeInventory("NulledWeapon");
			A_CheckPistolHand();
		}
		#### A 0 A_JumpIf(invoker.weaponstatus[PI50_CHAMBER]>0,2);
		#### B 0;
		---- A 1 A_Raise();
		---- A 1 A_Raise(30);
		---- A 1 A_Raise(30);
		---- A 1 A_Raise(30);
		---- A 1 A_Raise(26);
		---- A 1 A_Raise(22);
		---- A 1 A_Raise(18);
		wait;
	deselect0:
		5MCG A 0 A_CheckPistolHand();
		#### A 0 A_JumpIf(invoker.weaponstatus[PI50_CHAMBER]>0,2);
		#### B 0;
		---- AAA 1 A_Lower();
		---- A 1 A_Lower(18);
		---- A 1 A_Lower(24);
		---- A 1 A_Lower(30);
		wait;

	ready:
		5MCG A 0 A_CheckPistolHand();
		#### A 0 A_JumpIf(invoker.weaponstatus[PI50_CHAMBER]>0,2);
		#### B 0;
		#### # 0 A_SetCrosshair(21);
		#### # 1 A_WeaponReady(WRF_ALL);
		goto readyend;
	user3:
		---- A 0 A_MagManager("HD50AM_Mag");
		goto ready;
	user2:
	firemode:
		---- A 0{
			if(invoker.weaponstatus[0]&PI5F_SELECTFIRE)
			invoker.weaponstatus[0]^=PI5F_FIREMODE;
			else invoker.weaponstatus[0]&=~PI5F_FIREMODE;
		}goto nope;
	altfire:
		---- A 0{
			invoker.weaponstatus[0]&=~PI5F_JUSTUNLOAD;
			if(
				invoker.weaponstatus[PI50_CHAMBER]!=2
				&&invoker.weaponstatus[PI50_MAG]>0
			)setweaponstate("chamber_manual");
		}goto nope;
	chamber_manual:
		---- A 0{
			if(
				!(invoker.weaponstatus[0]&PI5F_JUSTUNLOAD)
				&&(
					invoker.weaponstatus[PI50_CHAMBER]==2
					||invoker.weaponstatus[PI50_MAG]<1
				)
			)setweaponstate("nope");
		}
		#### A 3 offset(1,34);
		#### D 4 offset(2,37){
			A_MuzzleClimb(frandom(0.4,0.5),-frandom(0.6,0.8));
			A_StartSound("weapons/50AM_Mag/SlideLock",CHAN_WEAPON);
			int psch=invoker.weaponstatus[PI50_CHAMBER];
			invoker.weaponstatus[PI50_CHAMBER]=0;
			if(psch==2){
				A_SpawnItemEx("HD50AM_Ammo",cos(pitch*12),0,height-8-sin(pitch)*12,1,2,3,0);
			}else if(psch==1){
				A_SpawnItemEx("HDSpent50AM",
					cos(pitch)*12,0,height-7-sin(pitch)*12,
					vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
			}
			if(invoker.weaponstatus[PI50_MAG]>0){
				invoker.weaponstatus[PI50_CHAMBER]=2;
				invoker.weaponstatus[PI50_MAG]--;
			}
		}
		#### B 3 offset(2,35);
		#### B 3 offset(1,33);
		#### B 0 A_ReFire();
		goto ready;
	althold:
	hold:
		goto nope;
		fire:
		---- A 0{
			invoker.weaponstatus[0]&=~PI5F_JUSTUNLOAD;
			if(invoker.weaponstatus[PI50_CHAMBER]==2)setweaponstate("shoot");
			else if(invoker.weaponstatus[PI50_CHAMBER]>0)setweaponstate("chamber_manual");
		}goto nope;
	shoot:
		#### C 1 offset(0,32){
			if(invoker.weaponstatus[PI50_CHAMBER]==2)A_GunFlash();
			A_WeaponOffset(frandom(-6,6),frandom(-6,6),WOF_ADD);
		}
		#### B 1{
			if(hdplayerpawn(self)){
				hdplayerpawn(self).gunbraced=false;
				A_GiveInventory("IsMoving",1);
			}
			A_MuzzleClimb(
				-frandom(0.8,1.1),-frandom(3.2,3.6),
				frandom(0.4,0.6),frandom(1.6,1.8)
			);
		}
		#### D 1 offset(0,42){
			A_SpawnItemEx("HDSpent50AM",
				cos(pitch)*12,0,height-7-sin(pitch)*12,
				vel.x,vel.y,vel.z,
				0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
			invoker.weaponstatus[PI50_CHAMBER]=0;
			if(invoker.weaponstatus[PI50_MAG]<1){
				A_StartSound("weapons/50AM_Mag/SlideLock",7,0,0.9);
				setweaponstate("fire.empty");
			}
		}
		#### E 1 offset(0,48){
			A_WeaponReady(WRF_NOFIRE);
			A_StartSound("weapons/50AM_Mag/SlideLock",7,0,0.5);
			invoker.weaponstatus[PI50_CHAMBER]=2;
			invoker.weaponstatus[PI50_MAG]--;
			if(
				(invoker.weaponstatus[0]&(PI5F_FIREMODE|PI5F_SELECTFIRE))
				==(PI5F_FIREMODE|PI5F_SELECTFIRE)
			){
				let pnr=HDPlayerPawn(self);
				if(
					pnr&&countinv("IsMoving")
					&&pnr.fatigue<12
				)pnr.fatigue+=2;
				A_GiveInventory("IsMoving",5);
				A_Refire("fire");
			}
		}
		#### E 1 offset(0,42);
		#### A 0;
		goto nope;
	fire.empty:
		#### D 1 offset(0,42);
		#### D 1 offset(0,48);
		#### B 1 offset(0,42);
		#### B 0 offset(0,33);
		goto nope;
	flash:
		6MCF A 0 A_JumpIf(invoker.wronghand,2);
		5MCF A 0;
		#### A 1 bright{
			HDFlashAlpha(230);
			A_Light1();
			A_StartSound("weapons/pistol/magnum",CHAN_WEAPON);
			let bbb=HDBulletActor.FireBullet(self,"HDB_50AM",spread:2.,speedfactor:frandom(0.99,1.01));
			if(//HDB_ShAK_APEX HDB_50AM
				frandom(0,ceilingz-floorz)<bbb.speed*0.3
			)A_AlertMonsters(256);
			
			invoker.weaponstatus[PI50_CHAMBER]=1;
			A_ZoomRecoil(0.995);
			A_MuzzleClimb(-frandom(1.4,2.2),-frandom(0.4,1.6));
		}
		#### B 1 bright; //A_StartSound("weapons/pistol",CHAN_WEAPON,1.0);
		---- A 0 A_Light0();
		stop;
	unload:
		---- A 0{
			invoker.weaponstatus[0]|=PI5F_JUSTUNLOAD;
			if(invoker.weaponstatus[PI50_MAG]>=0)setweaponstate("unmag");
		}goto chamber_manual;
	loadchamber:
		---- A 0 A_JumpIf(invoker.weaponstatus[PI50_CHAMBER]>0,"nope");
		---- A 1 offset(0,34) A_StartSound("weapons/pocket",CHAN_6);
		---- A 1 offset(2,40);
		---- A 1 offset(2,50);
		---- A 1 offset(3,60);
		---- A 2 offset(5,80);
		---- A 2 offset(7,90);
		#### B 2 offset(8,96);
		#### A 6 offset(6,88){
			if(countinv("HD50AM_Ammo")){
				A_TakeInventory("HD50AM_Ammo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[PI50_CHAMBER]=2;
				A_StartSound("weapons/50AM_Mag/SlideFwd",CHAN_7);
			}
		}
		#### A 2 offset(5,76);
		#### A 1 offset(4,64);
		#### A 1 offset(3,56);
		#### A 1 offset(2,48);
		#### A 2 offset(1,38);
		#### A 3 offset(0,34);
		goto readyend;
	reload:
		---- A 0{
			invoker.weaponstatus[0]&=~PI5F_JUSTUNLOAD;
			bool nomags=HDMagAmmo.NothingLoaded(self,"HD50AM_Mag");
			if(invoker.weaponstatus[PI50_MAG]>=8)setweaponstate("nope");
			else if(
				invoker.weaponstatus[PI50_MAG]<1
				&&(
					pressinguse()
					||nomags
				)
			){
				if(
					countinv("HD50AM_Ammo")
				)setweaponstate("loadchamber");
				else setweaponstate("nope");
			}else if(nomags)setweaponstate("nope");
		}goto unmag;
	unmag:
		#### # 1 offset(0,33) A_SetCrosshair(21);
		#### E 0 A_JumpIf(invoker.weaponstatus[PI50_CHAMBER]>0,2);
		#### D 0;
		---- A 1 offset(0,34);
		---- A 2 offset(1,39);
		---- A 2 offset(2,42);
		---- A 3 offset(3,46)
			{
				if(invoker.weaponstatus[PI50_MAG]>-1)
				A_StartSound("weapons/50AM_Mag/MagOut",CHAN_7);
				else A_StartSound("weapons/rifleclick2",CHAN_7);
			}
		---- A 0{
			int pmg=invoker.weaponstatus[PI50_MAG];
			invoker.weaponstatus[PI50_MAG]=-1;
			if(pmg<0){setweaponstate("magout");}
			else if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("HD50AM_Mag",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"HD50AM_Mag",pmg);
				setweaponstate("magout");
			}
			else{
				HDMagAmmo.GiveMag(self,"HD50AM_Mag",pmg);
				A_StartSound("weapons/pocket",CHAN_WEAPON);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		---- AAA 5 offset(0,46) A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		goto magout;
	magout:
		---- A 0{
			if(invoker.weaponstatus[0]&PI5F_JUSTUNLOAD)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}

	loadmag:
		---- A 4 offset(0,46) A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		---- A 0 A_StartSound("weapons/pocket",CHAN_WEAPON);
		---- A 5 offset(0,43) A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		---- A 3;
		---- A 0{
			let mmm=hdmagammo(findinventory("HD50AM_Mag"));
			if(mmm){
				invoker.weaponstatus[PI50_MAG]=mmm.TakeMag(true);
				A_StartSound("weapons/50AM_Mag/MagIn",CHAN_7);
			}
			/*if(
				invoker.weaponstatus[PI50_CHAMBER]<1
				&&invoker.weaponstatus[PI50_MAG]>0
			){
				invoker.weaponstatus[PI50_CHAMBER]=2;
				invoker.weaponstatus[PI50_MAG]--;
			}else setweaponstate("reloadend");*/
		}
		---- A 3 offset(0,45);
		---- A 5 offset(0,49);
		---- A 7 offset(0,47);
		---- A 0
		{
		
		if(
				invoker.weaponstatus[PI50_CHAMBER]<1
				&&invoker.weaponstatus[PI50_MAG]>0
			){
				invoker.weaponstatus[PI50_CHAMBER]=2;
				invoker.weaponstatus[PI50_MAG]--;
			}else setweaponstate("reloadend");
		}
		#### E 3 offset(4,48) A_StartSound("weapons/50AM_Mag/SlideFwd",CHAN_6); //weapons/pischamber2
		#### A 3 offset(3,47);
		#### A 2 offset(2,45);
		goto reloadend;
	reloadend:
		---- A 2 offset(3,46);
		---- A 1 offset(2,42);
		---- A 1 offset(2,38);
		---- A 1 offset(1,34);
		---- A 0 A_JumpIf(pressingreload()||pressingunload(),"nope");
		goto ready;

	user1:
	swappistols:
		---- A 0 A_SwapHandguns();
		---- A 0{
			bool id=(Wads.CheckNumForName("id",0)!=-1);
			bool offhand=invoker.wronghand;
			bool lefthanded=(
				(
					id
					&&!offhand
				)||(
					!id
					&&offhand
				)
			);
			if(lefthanded){
				A_Overlay(1025,"raiseleft");
				A_Overlay(1026,"lowerright");
			}else{
				A_Overlay(1025,"raiseright");
				A_Overlay(1026,"lowerleft");
			}
		}
		TNT1 A 5;
		5MCG A 0 A_CheckPistolHand();
		goto nope;
	lowerleft:
		5MCG A 0 A_JumpIf(Wads.CheckNumForName("id",0)!=-1,2);
		6MCG A 0;
		#### E 1 offset(6,38);
		#### E 1 offset(12,48);
		#### E 1 offset(20,60);
		#### E 1 offset(34,76);
		#### E 1 offset(50,86);
		stop;
	lowerright:
		6MCG A 0 A_JumpIf(Wads.CheckNumForName("id",0)!=-1,2);
		5MCG A 0;
		#### E 1 offset(-6,38);
		#### E 1 offset(-12,48);
		#### E 1 offset(-20,60);
		#### E 1 offset(-34,76);
		#### E 1 offset(-50,86);
		stop;
	raiseleft:
		5MCG A 0 A_JumpIf(Wads.CheckNumForName("id",0)!=-1,2);
		6MCG A 0;
		#### A 1 offset(50,86);
		#### A 1 offset(34,76);
		#### A 1 offset(20,60);
		#### A 1 offset(12,48);
		#### A 1 offset(6,38);
		stop;
	raiseright:
		6MCG A 0 A_JumpIf(Wads.CheckNumForName("id",0)!=-1,2);
		6MCG A 0;
		#### A 1 offset(-50,86);
		#### A 1 offset(-34,76);
		#### A 1 offset(-20,60);
		#### A 1 offset(-12,48);
		#### A 1 offset(-6,38);
		stop;
	whyareyousmiling:
		#### E 1 offset(0,48);
		#### E 1 offset(0,60);
		#### E 1 offset(0,76);
		TNT1 A 7;
		5MCG A 0{
			invoker.wronghand=!invoker.wronghand;
			A_CheckPistolHand();
		}
		#### E 1 offset(0,76);
		#### E 1 offset(0,60);
		#### E 1 offset(0,48);
		goto nope;


	spawn:
		5MCP ABCD -1 nodelay{
			if(invoker.weaponstatus[PI50_CHAMBER]<1){
				if(invoker.weaponstatus[0]&PI5F_SELECTFIRE)frame=3;
				else frame=1;
			}else{
				if(invoker.weaponstatus[0]&PI5F_SELECTFIRE)frame=2;
				else frame=0;
			}
		}stop;
	}
	override void initializewepstats(bool idfa){
		weaponstatus[PI50_MAG]=8;
		weaponstatus[PI50_CHAMBER]=2;
	}
	override void loadoutconfigure(string input){
		int selectfire=getloadoutvar(input,"selectfire",1);
		if(!selectfire){
			weaponstatus[0]&=~PI5F_SELECTFIRE;
			weaponstatus[0]&=~PI5F_FIREMODE;
		}else if(selectfire>0){
			weaponstatus[0]|=PI5F_SELECTFIRE;
		}
		if(weaponstatus[0]&PI5F_SELECTFIRE){
			int firemode=getloadoutvar(input,"firemode",1);
			if(!firemode)weaponstatus[0]&=~PI5F_FIREMODE;
			else if(firemode>0)weaponstatus[0]|=PI5F_FIREMODE;
		}
	}
}
enum pistol50status{
	PI5F_SELECTFIRE=1,
	PI5F_FIREMODE=2,
	PI5F_JUSTUNLOAD=4,

	PI50_FLAGS=0,
	PI50_MAG=1,
	PI50_CHAMBER=2, //0 empty, 1 spent, 2 loaded
};



//use this to give an autopistol in a custom loadout
class HD_AutoMagFA:HDWeaponGiver{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "MP-50 Auto Mag"
		//$Sprite "5MCPC0"
		//+hdweapon.fitsinbackpack
		//hdweapon.refid HDLD_50PSTLA;
		tag "MP-50 Auto Mag  (Anti-Personnel)";
		hdweapongiver.bulk 34;
		hdweapongiver.weapontogive "HD_Automag";
		hdweapongiver.config "selectfire";
		hdweapongiver.weprefid HDLD_50PSTL;
		inventory.icon "5MCPC0";
	}
}

//.50 Action Mega (pretty much .50 AE)
/*
class HDB_50AM:HDBulletActor{
	default{
		pushfactor 0.35;
		mass 110;
		speed 900;
		accuracy 450;
		stamina 900;
		woundhealth 20;
		hdbulletactor.hardness 2;
		hdbulletactor.distantsounder "DoubleDistantRifle";
	}
}*/
/*
class HDB_50AM:HDBulletActor{
    default{
		pushfactor 0.35;
		mass 110;
		speed HDCONST_MPSTODUPT*650;
		accuracy 300;
		stamina 1270;
		woundhealth 45;
		hdbulletactor.hardness 3;
		hdbulletactor.distantsound "world/deaglefar";
    }
}