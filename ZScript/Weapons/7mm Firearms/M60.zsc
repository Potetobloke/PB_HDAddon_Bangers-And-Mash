// ------------------------------------------------------------
// AutoCannon
// ------------------------------------------------------------

class HD_M60:HDWeapon{

	int shotcount;

	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "Kelenken"
		//$Sprite "M2DRP0"
		-hdweapon.fitsinbackpack
		+hdweapon.hinderlegs
		obituary "%k didn't lead %o as much.";
		weapon.selectionorder 10;
		weapon.slotpriority 1;
		weapon.slotnumber 6;
		weapon.kickback 90;
		weapon.bobrangex 1.3;
		weapon.bobrangey 1.9;
		weapon.bobspeed 0.4;
		scale 0.7;
		inventory.pickupmessage "You got the 7.76 GPMG! Get some!";
		hdweapon.barrelsize 32,1,3;
		hdweapon.refid HDLD_M60PIG;
		tag "$TAG_M60"; 
	}
	
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}

	override double gunmass(){
		double howmuch=15.5;
			return howmuch+weaponstatus[M60S_MAG]*0.02;
	}
	
	override void PostBeginPlay()
    {
        weaponspecial = 1337;
        Super.PostBeginPlay();
    }
	override void tick(){
		super.tick();
		drainheat(M60S_HEAT,1);
		if(shotcount>0){shotcount--;}
		//if(shotcount>100){A_PlaySkinSound(SKINSOUND_XDEATH,"*xdeath");shotcount=0;}
	}
	
	override double weaponbulk(){
		double blx=135;
		int mgg=weaponstatus[M60S_MAG];
		return blx+(mgg<0?0:((ENC_776BELTBOX_EMPTY)+mgg*ENC_776_LOADED));
	}
	
	override void failedpickupunload(){
		failedpickupunloadmag(M60S_MAG,"HD_PB_7mmBeltBox");
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,250);
			if(owner.countinv("HD50OMGAmmo"))owner.A_DropInventory("HD50OMGAmmo",amt*250);
			else owner.A_DropInventory("HD_PB_7mmBeltBox",amt);
		}
	}
	override void ForceBasicAmmo(){
		owner.A_TakeInventory("HD50OMGAmmo");
		owner.A_TakeInventory("HD_PB_7mmBeltBox");
		owner.A_GiveInventory("HD_PB_7mmBeltBox");
	}
	override string,double getpickupsprite(){
		return "M60P"..((weaponstatus[M60S_MAG]<0)?"B":"A").."0",1.;
	}
	
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("HD_PB_7mmBeltBox")));
			if(nextmagloaded>=250){
				sb.drawimage("7MBXNORM",(-49,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(1,1));
			}else if(nextmagloaded<1){
				sb.drawimage("MBX1B0",(-49,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.,scale:(1,1));
			}else sb.drawbar(
				"7MBXNORM","7MBXGRAY",
				nextmagloaded,250,
				(-49,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("HD_PB_7mmBeltBox"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM);
		}
		sb.drawwepnum(hdw.weaponstatus[M60S_MAG],250);
		//if(hdw.weaponstatus[M60S_CHAMBER]==2)sb.drawwepdot(-16,-10,(3,1));
		
		if(hdw.weaponstatus[M60S_CHAMBER]==2){sb.drawwepdot(-26,-17,(3,2));
		}else if(hdw.weaponstatus[M60S_CHAMBER]==1){sb.drawwepdot(-26,-22,(3,2));
		}else{sb.drawwepdot(-26,-27,(3,2));
		}
	}
	
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_RELOAD.."  Reload\n"
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOADUNLOAD
		;
	}
	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
		int cx,cy,cw,ch;
		[cx,cy,cw,ch]=screen.GetClipRect();
		sb.SetClipRect(
			-16+bob.x,-4+bob.y,32,16,
			sb.DI_SCREEN_CENTER
		);
		vector2 bobb=bob*3;
		bobb.y=clamp(bobb.y,-8,8);
		sb.drawimage(
			"M60_ST01",(0,1.5)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			alpha:0.98,scale:(1.1,1)
		);
		sb.SetClipRect(cx,cy,cw,ch);
		sb.drawimage(
			"M60_ST00",(0,-11.0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			scale:(0.9,0.9)
		);
	}
	states{
		
	droop:
		TNT1 A 1{
			if(pitch<frandom(8,10)&&(!gunbraced())){
				if( countinv("PowerStrength")<1){    
					A_MuzzleClimb(frandom(-0.075,0.075),
						frandom(0.1,clamp(1-pitch,0.05,0.6)));
				}else{
					A_MuzzleClimb(frandom(-0.045,0.045),
						frandom(0.1,clamp(1-pitch,0.03,0.4)));
				}
			}
		}loop;
		
	
	select0:
		GPM0 A 0;
		#### A 0 A_Overlay(2,"droop");
		goto select0bfg;
	deselect0:
		GPM0 A 0;
		goto deselect0bfg;

	ready:
		GPM0 A 0 A_JumpIf(invoker.weaponstatus[M60S_MAG]<0,2);
		GPM0 A 0;
		#### A 0;
		#### A 1{
			A_SetCrosshair(21);
			A_WeaponReady(WRF_ALL);
		}
		goto readyend;
	user3:
		---- A 0 A_MagManager("HD_PB_7mmBeltBox");
		goto ready;
	altfire:
	althold:
		goto nope;
	hold:
		#### A 1;
		goto nope;
	boltforward:
		GPM0 A 2 {invoker.weaponstatus[M60S_CHAMBER]=0;A_StartSound("weapons/m60/boltfwd",chan_6,volume:0.4);}
		goto nope;
	fire:
		//GPM0 A 0 A_JumpIf(invoker.weaponstatus[M60S_MAG]<0,2);
		GPM0 A 3;
	fire2:
		GPM0 A 0{
			if(invoker.weaponstatus[M60S_CHAMBER]==2
			&&invoker.weaponstatus[M60S_LOADED]>0&&invoker.weaponstatus[M60S_MAG]>0){
				A_GunFlash();
			}else if (invoker.weaponstatus[M60S_CHAMBER]==2
			&&invoker.weaponstatus[M60S_LOADED]<1||invoker.weaponstatus[M60S_MAG]<1){
				setweaponstate("boltforward");
			}else setweaponstate("nope");
			}
		
		#### EB 1;
		#### C 1
		{
			if(invoker.weaponstatus[M60S_CHAMBER]==1)
			{

				A_EjectCasing("HDSpent7mm",
					frandom(-1,2),
					(frandom(0.5,0.7),-frandom(7,8.5),frandom(0,0.2)),
					(-3,0,-3)
				);
				
				A_EjectCasing("HDFlyingBeltLink",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(3,3.5),frandom(0,0.2)),
					(-3,0,-3)
				);

				invoker.weaponstatus[M60S_MAG]--;
				invoker.weaponstatus[M60S_CHAMBER]=2;
				if(invoker.weaponstatus[M60S_MAG]<=0){
					A_StartSound("weapons/m60/boltfwd",chan_6,volume:0.4);
					invoker.weaponstatus[M60S_CHAMBER]=0;
				}
			}
		}
		#### D 1;
		#### A 1 A_ReFire("fire2");
		goto readyend;
	flash:
		TNT1 A 0{
			let bbb=HDBulletActor.FireBullet(self,"HDB_776",speedfactor:1.2); //HDB_50OMG
			if(
				frandom(32,ceilingz-floorz)<bbb.speed*0.2
			)A_AlertMonsters(200);

			A_ZoomRecoil(0.98);
			A_StartSound("weapons/m60/fire",CHAN_WEAPON,CHANF_OVERLAP,1,pitch:frandom(0.95,1));
			invoker.weaponstatus[M60S_CHAMBER]=1;
			invoker.weaponstatus[M60S_HEAT]+=7;
			invoker.shotcount+=frandom(5,7);
			
			if(invoker.shotcount>120)
			{
				A_PlaySkinSound(SKINSOUND_XDEATH,"*xdeath");
				invoker.shotcount=0;
			}
		}
		GPMF A 0 bright{
			HDFlashAlpha(15);
			A_Light1();
			
			int recoilside=randompick(-1,1);

			A_MuzzleClimb(
					0,0,
					-0.03,-0.07,
					-frandom(0.1,0.3),-frandom(0.9,1.1),
					-frandom(0.2,0.4),-frandom(0.9,1.1)
				);
		}
		GPMF # 0 A_Jump(128,2);
		GPMF A 1 Bright HDFlashAlpha(random(32,64));
		goto lightdone;
		GPMF B 1 Bright HDFlashAlpha(random(32,64));
		goto lightdone;
		
		chamber_manual:
		GPM0 A 1 offset(-1,34){
			if(
				invoker.weaponstatus[M60S_CHAMBER]==2
				||invoker.weaponstatus[M60S_MAG]<1
			)setweaponstate("nope");
		}
		#### A 1 offset(-2,36);
		#### A 2 offset(-3,38) A_StartSound("weapons/m60/cock",CHAN_6,volume:0.6);
		#### A 2 offset(-5,40);
		#### A 1 offset(-4,39);
		#### A 1 offset(-5,38);
		#### A 1 offset(-2,36);
		#### A 1 offset(0,34);
		goto readyend;

	user4:
	unload:
		GPM2 A 0;
		#### A 0{
			invoker.weaponstatus[0]|=M60F_JUSTUNLOAD;
			if(
				invoker.weaponstatus[M60S_MAG]>=0
			)setweaponstate("unmag");
			else if(invoker.weaponstatus[M60S_CHAMBER]>0)setweaponstate("boltforward");
		}goto nope;
	reload:
		GPM0 A 0 
		{
			if(invoker.weaponstatus[M60S_LOADED]<1&&invoker.weaponstatus[M60S_MAG]>0)
				setweaponstate("unmag");
		}
		GPM0 A 1 offset(1,34)
		{if(invoker.weaponstatus[M60S_CHAMBER]>0)setweaponstate("reload.1");}
		#### A 1 offset(2,36);
		#### A 2 offset(3,38) 
		{
			A_StartSound("weapons/m60/cock",CHAN_6,volume:0.76);
			invoker.weaponstatus[M60S_CHAMBER]=2;
		}
		#### A 3 offset(5,40);
		#### A 2 offset(4,39);
		#### A 2 offset(5,38);
		#### A 1 offset(2,36);
		#### A 1 offset(0,34);
	reload.1:
		GPM0 A 0;
		#### A 0{
			invoker.weaponstatus[0]&=~M60F_JUSTUNLOAD;
			if(invoker.weaponstatus[M60S_MAG]>=250&&invoker.weaponstatus[M60S_LOADED]>0)setweaponstate("nope");
			else if(HDMagAmmo.NothingLoaded(self,"HD_PB_7mmBeltBox"))
			{setweaponstate("nope");}
		}goto unmag;
	unmag:
		GPM2 A 0;
		#### A 1 offset(0,34) A_SetCrosshair(21);
		#### A 1 offset(-5,38);
		#### A 1 offset(-10,42);
		#### B 2 offset(-20,46);
		#### C 2 offset(-35,48) A_StartSound("weapons/m60/open",CHAN_7);
		#### D 2 offset(-30,52){
			A_MuzzleClimb(0.3,0.4);
		}
		#### D 5 offset(-31,51)A_MuzzleClimb(0.3,0.4);
		#### D 7 offset(-29,50)A_MuzzleClimb(0.3,0.4);
		#### D 7 offset(-30,51)A_MuzzleClimb(0.3,0.4);
		#### D 0 
		{
			if(invoker.weaponstatus[M60S_LOADED]<1&&invoker.weaponstatus[M60S_MAG]>0&&
				!invoker.weaponstatus[0]&M60F_JUSTUNLOAD)
				setweaponstate("loadbelt");
		}
		#### D 0{
			int magamt=invoker.weaponstatus[M60S_MAG];
			if(magamt<0){
				setweaponstate("magout");
				return;
			}
			invoker.weaponstatus[M60S_MAG]=-1;
			if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("HD_PB_7mmBeltBox",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"HD_PB_7mmBeltBox",magamt);
				A_StartSound("weapons/m60/boxout",CHAN_6,volume:0.5);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"HD_PB_7mmBeltBox",magamt);
				A_StartSound("weapons/m60/boxout",CHAN_6);
				A_StartSound("weapons/pocket",CHAN_WEAPON,volume:0.5);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		#### EE 9 offset(-34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
	magout:
		#### D 6 offset(-31,52)A_MuzzleClimb(0.3,0.4);
		#### D 9 offset(-29,50)A_MuzzleClimb(0.3,0.4);
		#### D 8 offset(-30,51)A_MuzzleClimb(0.3,0.4);
		#### E 0{
			if(invoker.weaponstatus[0]&M60F_JUSTUNLOAD)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}
	loadmag:
		#### E 0 A_StartSound("weapons/pocket",CHAN_WEAPON);
		#### E 6 offset(-34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### E 7 offset(-35,52) A_MuzzleClimb(frandom(0.3,-0.8),frandom(-0.2,0.4));
		#### E 5 offset(-34,53) 
		{
			A_MuzzleClimb(frandom(0.3,-0.8),frandom(-0.2,0.4));
			A_StartSound("weapons/m60/boxin",CHAN_6,volume:0.5);
			
			let mmm=hdmagammo(findinventory("HD_PB_7mmBeltBox"));
			if(mmm){
				invoker.weaponstatus[M60S_MAG]=mmm.TakeMag(true);
				invoker.weaponstatus[M60S_LOADED]=0;
			}
		
		}
		#### E 6 offset(-34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### E 7 offset(-35,52) A_MuzzleClimb(frandom(0.3,-0.8),frandom(-0.2,0.4));
		#### E 7 offset(-34,53) A_MuzzleClimb(frandom(0.3,-0.8),frandom(-0.2,0.4));
	loadbelt:
		#### E 6 offset(-33,51) A_MuzzleClimb(frandom(0.3,-0.8),frandom(-0.2,0.4));
		#### E 10 offset(-32,50) A_StartSound("weapons/m60/belt",CHAN_6);
		#### E 4 offset(-32,49){
			if(invoker.weaponstatus[M60S_MAG]>0)invoker.weaponstatus[M60S_LOADED]=1;
			}
		#### E 6 offset(-33,51) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### E 7 offset(-34,52) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
	reloadend:
		GPM2 E 0;
		#### E 4 offset(-32,52);
		#### D 3 offset(-37,58) A_StartSound("weapons/m60/close",CHAN_7);
		#### C 2 offset(-38,62);
		#### B 2 offset(-35,56);
		#### A 2 offset(-25,52);
		GPM0 A 3 offset(-20,46);
		#### # 2 offset(-10,42);
		#### # 2 offset(-5,38);
		#### # 1 offset(0,34);
		goto nope;


	spawn:
		M60P AB -1 nodelay{
			if(invoker.weaponstatus[M60S_MAG]<0)frame=1;
		}
		
	}
	override void initializewepstats(bool idfa){
		weaponstatus[0]=0;
		weaponstatus[M60S_MAG]=250;
		weaponstatus[M60S_CHAMBER]=2;
		weaponstatus[M60S_LOADED]=1;
	}
}

enum hdm60gpmgstatus{
	M60F_JUSTUNLOAD=1,

	M60S_FLAGS=0,
	M60S_MAG=1,
	M60S_CHAMBER=2,
	M60S_HEAT=3,
	M60S_LOADED=4,
	//M60S_MODDED=4,
};
