// ------------------------------------------------------------
// 6x42mm Sabot Cased Flechette
// ------------------------------------------------------------

class HD_SteyrACR:HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "Buger M22 Target Rifle"
		//$Sprite "G11PA0"

		+hdweapon.fitsinbackpack
		obituary "%k performed acupuncture on %o. It did not end well.";
		weapon.selectionorder 60;
		weapon.slotnumber 4;
		scale 0.55;
		weapon.bobrangex 0.22;
		weapon.bobrangey 0.9;
		inventory.pickupmessage "You got the flechette rifle!";
		hdweapon.barrelsize 26,0.7,1;
		hdweapon.refid HDLD_STEYRACR;
		tag "$TAG_STEYRACR";
		hdweapon.loadoutcodes "
			\cufiremode - 0-1, semi/burst
			\cuzoom - 20-90, 10x the resulting FOV in degrees";
		}
		
			//\cunogl - 0/1, whether it has a launcher
		
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse){return GetSpareWeaponRegular(newowner,reverse);}
	
	override double gunmass(){
		return 6.0+weaponstatus[SACRS_MAG]*0.02;
	}
	override double weaponbulk(){
		double blx=95;
		int mgg=weaponstatus[SACRS_MAG];
		return blx+(mgg<0?0:(ENC_426MAG_LOADED+mgg*ENC_426_LOADED));
	}
	
	override void tick(){
		super.tick();
		drainheat(SACRS_HEAT,2);
	}
	
	override void failedpickupunload(){
		failedpickupunloadmag(SACRS_MAG,"PB_HDSteyrACRMag");
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,42);
			if(owner.countinv("HD6mmFlechetteAmmo"))owner.A_DropInventory("HD6mmFlechetteAmmo",amt*42);
			else owner.A_DropInventory("PB_HDSteyrACRMag",amt);
		}
	}
	override string,double getpickupsprite(){
		return "ACRP"..((weaponstatus[SACRS_MAG]<0)?"B":"A").."0";
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("PB_HDSteyrACRMag")));
			if(nextmagloaded>=42){
				sb.drawimage("ACMGNORM",(-48,-3),sb.DI_SCREEN_CENTER_BOTTOM);
			}else if(nextmagloaded<1){
				sb.drawimage("ACMGEMPTY",(-48,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.);
			}else sb.drawbar(
				"ACMGNORM","ACMGGREY",
				nextmagloaded,42,
				(-48,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("PB_HDSteyrACRMag"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM);
		}
		sb.drawwepcounter(hdw.weaponstatus[SACRS_AUTO],
			-22,-10,"RBRSA3A7","STBURAUT","STFULAUT"
		);
		sb.drawwepnum(hdw.weaponstatus[SACRS_MAG],42);
		if(hdw.weaponstatus[SACRS_CHAMBER]==2)sb.drawwepdot(-16,-10,(3,1));
	}
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_RELOAD.."  Reload mag\n"
		..WEPHELP_FIREMODE.."  Semi/Burst\n"
		..WEPHELP_ZOOM.."+"..WEPHELP_FIREMODE.."+"..WEPHELP_UPDOWN.."  Zoom\n"
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOAD.."  Unload magazine"
		;
	}
	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
		float scaledyoffset=41.9;
		if(hdw.weaponstatus[0]&ZM66F_GLMODE)sb.drawgrenadeladder(hdw.airburst,bob);
		else{
		vector2 bobb=bob*1.25;
		//bobb.y=clamp(bobb.y,-8,8);
		
				sb.drawimage(
					"ACR_TOP",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
					scale:(1.0,1.0)
				);
			if(scopeview){
				double degree=(hdw.weaponstatus[SACRS_ZOOM])*0.1;
				/*texman.setcameratotexture(hpc,"HDXHCAM3_PB",degree);
				sb.drawimage(
					"HDXHCAM3_PB",(0,scaledyoffset-5.1)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
					scale:(0.31,0.31)
				);*/
		
				int scaledwidth=57;
				int cx,cy,cw,ch;
				[cx,cy,cw,ch]=screen.GetClipRect();
				sb.SetClipRect(
					-28+bob.x,13+bob.y,scaledwidth,scaledwidth,
					sb.DI_SCREEN_CENTER
				);
				
				sb.fill(color(255,0,0,0),
					bob.x-30,scaledyoffset+bob.y-30,
					60,60,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER
				);
		
				texman.setcameratotexture(hpc,"HDXCAM_ZM66",degree);
				let cam  = texman.CheckForTexture("HDXCAM_ZM66",TexMan.Type_Any);
				sb.DrawCircle(cam,(0,scaledyoffset)+bob*3,.075,usePixelRatio:true);
				
				//sb.drawimage(
				//	"scophole",(0,scaledyoffset-5.1)+bob*3,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
				//	scale:(0.81,0.81)
				//);
				sb.SetClipRect(cx,cy,cw,ch);
				sb.drawimage(
					"ACR_SC01",(0,scaledyoffset)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
					scale:(1.0,1.0)
				);
				sb.drawnum(int(degree*10),
					3+bob.x,72+bob.y,sb.DI_SCREEN_CENTER,Font.CR_BLACK
				);
			}
		}
	}
	
	states{
	select0:
	TNT1 A 0;
		ACR0 A 0;
		#### # 0;
		goto select0big;
	deselect0:
		ACR0 A 0;
		#### # 0;
		goto deselect0big;

	ready:
		ACR0 A 0;
		#### # 1{
			A_SetCrosshair(21);
			invoker.weaponstatus[SACRS_RATCHET]=0;
			if(pressingzoom())A_ZoomAdjust(SACRS_ZOOM,20,90);
			else A_WeaponReady(WRF_ALL);
			}
		goto readyend;
	user3:
		---- A 0 A_MagManager("PB_HDSteyrACRMag");
		goto ready;
	altfire:
	althold:
		goto nope;
	hold:
		ACR0 A 0{
			if(
				//full auto
				invoker.weaponstatus[SACRS_AUTO]==2
			)setweaponstate("fire2");
			else if(
				//burst
				invoker.weaponstatus[SACRS_AUTO]<1
				||invoker.weaponstatus[SACRS_RATCHET]>2
			)setweaponstate("nope");
		}goto fire2;
	user2:
	firemode:
		---- # 1{
			int aut=invoker.weaponstatus[SACRS_AUTO];
			if(aut>1)invoker.weaponstatus[SACRS_AUTO]=0;
			else if(aut<0)invoker.weaponstatus[SACRS_AUTO]=0;
			else invoker.weaponstatus[SACRS_AUTO]++;
		}goto nope;
	fire:
		ACR0 # 1;
	fire2:
		ACR0 A 1{
			if(invoker.weaponstatus[SACRS_CHAMBER]==2){
				A_GunFlash();
			}else{
				if(invoker.weaponstatus[SACRS_MAG]>0)setweaponstate("chamber");
				else setweaponstate("nope");
			}
		}
		ACR0 B 1;
		#### A 0{
			if(invoker.weaponstatus[SACRS_CHAMBER]==1){
				A_EjectCasing("HDSpent6mmFlechette",
				frandom(-0.5,0.5),
				(frandom(-0.5,0.5),frandom(-0.5,0.5),-4),(-4,0,-6));
				invoker.weaponstatus[SACRS_CHAMBER]=0;
			}
			if(invoker.weaponstatus[SACRS_MAG]>0){
				invoker.weaponstatus[SACRS_MAG]--;
				invoker.weaponstatus[SACRS_CHAMBER]=2;
			}
			if(invoker.weaponstatus[SACRS_AUTO]>0)
			{
			if(invoker.weaponstatus[SACRS_AUTO]==1)
			{invoker.weaponstatus[SACRS_RATCHET]++;}
			A_ReFire();
			}
		}
		goto nope;
	
	flash:
		ACRF A 1 bright{
			A_Light1();
			HDFlashAlpha(-16);
			A_StartSound("weapons/steyracr/fire",CHAN_WEAPON);
			A_ZoomRecoil(min(0.95,1.-0.05*min(invoker.weaponstatus[SACRS_AUTO],1)));
			
			invoker.weaponstatus[SACRS_HEAT]+=random(1,2);
			HDBulletActor.FireBullet(self,"HDB_6mmFlechette",
			spread:0.75,amount:1); //has inaccuracy issues
			
			/*invoker.weaponstatus[SACRS_HEAT]+=random(3,5);
			HDBulletActor.FireBullet(self,"HDB_6mmFlechette_Duplex",
			spread:1.1,amount:3);*/
			
			//distantnoise.make(p,"world/riflefar");
			
			invoker.weaponstatus[SACRS_CHAMBER]=1;
			A_MuzzleClimb(
				-frandom(0.01,0.01),-frandom(0,0.01),
				-0.1,-frandom(0.1,0.2),
				-frandom(0.1,0.3),-frandom(0.1,0.2)
			);
			A_AlertMonsters();
		}
		ACRF A 0
		{
			A_MuzzleClimb(
				-frandom(0.1,0.1),-frandom(0,0.1),
				-0.2,-frandom(0.3,0.4),
				-frandom(0.4,1.4),-frandom(1.3,2.6)
			);
		}
		goto lightdone;


	unloadchamber:
		ACR0 CD 2;
		#### E 2 offset(2,34) A_JumpIf(invoker.weaponstatus[SACRS_CHAMBER]<1,"nope");
		#### F 2 offset(5,40) A_StartSound("weapons/steyracr/cock1",CHAN_6,volume:0.6,pitch:0.92);
		#### G 2 offset(6,44){
			class<actor>which=invoker.weaponstatus[SACRS_CHAMBER]>1?"HD6mmFlechetteAmmo":"HDSpent9mm";
			invoker.weaponstatus[SACRS_CHAMBER]=0;
			A_SpawnItemEx(which,
				cos(pitch)*10,0,height-8-sin(pitch)*10,
				vel.x,vel.y,vel.z,
				0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
		}
		#### G 2 offset(6,40);
		#### G 3 offset(5,38);
		#### H 2 offset(5,37) A_StartSound("weapons/steyracr/cock2",CHAN_6,volume:0.6);
		#### I 2 offset(2,36);
		#### A 2 offset(0,32);
		goto readyend;
	loadchamber:
		---- A 0 A_JumpIf(invoker.weaponstatus[SACRS_CHAMBER]>0,"nope");
		---- A 0 A_JumpIf(!countinv("HD6mmFlechetteAmmo"),"nope");
		---- C 1;
		---- D 1 offset(0,34) A_StartSound("weapons/pocket",CHAN_5);
		#### E 2 offset(2,36);
		#### F 2 offset(3,38) A_StartSound("weapons/steyracr/cock1",CHAN_6,volume:0.6,pitch:0.92);
		#### G 2 offset(5,40);
		#### G 4 offset(4,39){
			if(countinv("HD6mmFlechetteAmmo")){
				A_TakeInventory("HD6mmFlechetteAmmo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[SACRS_CHAMBER]=2;
				A_StartSound("weapons/rifleclick2",CHAN_7);
			}
		}
		#### G 7 offset(5,37);
		#### H 1 offset(2,36) A_StartSound("weapons/steyracr/cock2",CHAN_6,volume:0.6);
		#### I 1 offset(0,34);
		#### A 2 offset(0,32);
		goto readyend;
	user4:
	unload:
		ACR0 A 0;
		#### A 0{
			invoker.weaponstatus[0]|=SACRF_JUSTUNLOAD;
			if(
				invoker.weaponstatus[SACRS_MAG]>=0
			)setweaponstate("unmag");
			else if(invoker.weaponstatus[SACRS_CHAMBER]>0)setweaponstate("unloadchamber");
		}goto nope;
	reload:
		ACR0 A 0;
		#### A 0{
			invoker.weaponstatus[0]&=~SACRF_JUSTUNLOAD;
			if(invoker.weaponstatus[SACRS_MAG]>=42)setweaponstate("nope");
			else if(HDMagAmmo.NothingLoaded(self,"PB_HDSteyrACRMag")){
				if(
					invoker.weaponstatus[SACRS_MAG]<0
					&&countinv("HD6mmFlechetteAmmo")
				)setweaponstate("loadchamber");
				else setweaponstate("nope");
			}
		}goto unmag;
	unmag:
		ACR0 A 0;
		#### A 1 offset(0,34) A_SetCrosshair(21);
		#### A 1 offset(5,38);
		#### A 1 offset(10,42);
		#### A 2 offset(20,46);
		#### A 4 offset(30,52){
			A_MuzzleClimb(0.3,0.4);
			//if(invoker.weaponstatus[SACRS_MAG]>-1)
			A_StartSound("weapons/rifleclick2",CHAN_7,volume:0.25);
		}
		#### A 0{
			int magamt=invoker.weaponstatus[SACRS_MAG];
			if(magamt<0){
				setweaponstate("magout");
				return;
			}
			invoker.weaponstatus[SACRS_MAG]=-1;
			if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("PB_HDSteyrACRMag",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"PB_HDSteyrACRMag",magamt);
				A_StartSound("weapons/rifleunload",CHAN_7);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"PB_HDSteyrACRMag",magamt);
				A_StartSound("weapons/pocket",CHAN_WEAPON);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		#### AA 7 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
	magout:
		#### A 4 offset(33,52);
		#### A 7 offset(34,54);
		#### A 0{
			if(invoker.weaponstatus[0]&SACRF_JUSTUNLOAD)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}

	loadmag:
		#### A 0 A_StartSound("weapons/pocket",CHAN_WEAPON);
		#### A 6 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### A 7 offset(34,52) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### A 5 offset(32,50) A_StartSound("weapons/rifleload",CHAN_WEAPON,CHANF_OVERLAP);
		#### A 3 offset(32,48){
			let mmm=hdmagammo(findinventory("PB_HDSteyrACRMag"));
			if(mmm){
				invoker.weaponstatus[SACRS_MAG]=mmm.TakeMag(true);
				//A_StartSound("weapons/rifleload",CHAN_WEAPON,CHANF_OVERLAP);
				A_StartSound("weapons/rifleclick2",CHAN_WEAPON,CHANF_OVERLAP,0.6);
			}
			if(
				invoker.weaponstatus[SACRS_MAG]<1
				||invoker.weaponstatus[SACRS_CHAMBER]>0
			)setweaponstate("reloadend");
		}
	chamber:
		ACR0 A 0;
		ACR0 CDE 2;
		ACR0 F 2 A_StartSound("weapons/steyracr/cock1",CHAN_6,volume:0.6,pitch:0.92);
		#### G 1 offset(33,46){
			invoker.weaponstatus[SACRS_MAG]--;
			invoker.weaponstatus[SACRS_CHAMBER]=2;
		}
		#### G 2 offset(33,44);
		#### H 2 offset(32,43) A_StartSound("weapons/steyracr/cock2",CHAN_6,volume:0.6);
		#### I 2 offset(31,43);
		#### A 3 offset(30,42);
		#### A 2 offset(20,46);
		#### A 1 offset(10,39);
		goto reloadend.pt2;
	reloadend:
		#### A 3 offset(30,52);
		#### A 2 offset(20,46);
		#### A 1 offset(10,42);
	reloadend.pt2:
		#### A 1 offset(5,38);
		#### A 1 offset(1,34);
		goto nope;
		
	spawn:
		ACRP AB -1 nodelay{
			if(invoker.weaponstatus[SACRS_MAG]<0)frame=1;
		}
	}
	override void initializewepstats(bool idfa){
		weaponspecial = 1337;
		weaponstatus[0]=0;
		weaponstatus[SACRS_MAG]=42;
		weaponstatus[SACRS_CHAMBER]=2;
		weaponstatus[SACRS_ZOOM]=30;
		if(!idfa)weaponstatus[SACRS_AUTO]=0;
	}
	
	override void loadoutconfigure(string input){
		int zoom=getloadoutvar(input,"zoom",3);
		if(zoom>=0)weaponstatus[SACRS_ZOOM]=clamp(zoom,20,90);

			int firemode=getloadoutvar(input,"firemode",1);
			if(firemode>=0){
				weaponstatus[0]&=~ZM66F_NOFIRESELECT;
				weaponstatus[SACRS_AUTO]=clamp(firemode,0,2);
			}
	}
}

enum steyracrstatus{
	SACRF_JUSTUNLOAD=1,
	SACRF_GRENADELOADED=4,
	SACRF_NOLAUNCHER=8,
	SACRF_GLMODE=16,

	SACRS_FLAGS=0,
	SACRS_MAG=1,
	SACRS_CHAMBER=2, //0 empty, 1 spent, 2 loaded
	SACRS_AUTO=3, //0 semi, 1 burst, 2 auto
	SACRS_RATCHET=4,
	SACRS_ZOOM=5,
	SACRS_HEAT=6,
	SACRS_GLROUND=7,
};