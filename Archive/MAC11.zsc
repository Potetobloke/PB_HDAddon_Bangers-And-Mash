const HDLD_MAC11="m11";
class HDMAC11:HDHandgun{
	//bool MACstockout;
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "Raycob RAC-13/9 Machine Pistol"
		//$Sprite "MC1PA0"

		obituary "%o met %k's lead spitting brick.";
		weapon.selectionorder 31;
		weapon.slotpriority 0.35;
		+hdweapon.fitsinbackpack
		+hdweapon.reverseguninertia
		weapon.slotnumber 2;
		weapon.kickback 30;
		weapon.bobrangex 0.1;
		weapon.bobrangey 0.6;
		weapon.bobspeed 2.5;
		scale 0.50;
		inventory.pickupmessage "You got the Raycob RAC-13/9!";
		hdweapon.barrelsize 10,0.65,0.5;
		hdweapon.refid HDLD_MAC11;
		tag "Raycob RAC-13/9 Machine Pistol";
	}
	
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse){return GetSpareWeaponRegular(newowner,reverse);}
	override double gunmass(){
		return 13+(weaponstatus[MACS_MAG]==-1)?-0.95:(weaponstatus[MACS_MAG]*1.5);
	}
			override void PostBeginPlay()
    {
        weaponspecial = 1337; // [Ace] UaS sling compatibility.
        Super.PostBeginPlay();
    }
	override double weaponbulk(){
	double blx=(weaponstatus[0]&MACG_STOCK)?60:35;
		int mgg=weaponstatus[MACS_MAG];
		return blx+(mgg<0?0:(+ENC_9MAG30_LOADED+mgg*ENC_9_LOADED));
	}
	override void failedpickupunload(){
		failedpickupunloadmag(MACS_MAG,"HD9mMag30");
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,10);
			if(owner.countinv("HDPistolAmmo"))owner.A_DropInventory("HDPistolAmmo",amt*30);
			else owner.A_DropInventory("HD9mMag30",amt);
		}
	}
	
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_ALTFIRE.."  Collapse Stock\n"
		..WEPHELP_RELOAD.."  Reload\n"
		..WEPHELP_FIREMODE.."  Semi/Auto\n"
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOADUNLOAD
		;
	}
	
	action void A_StockExtend(){
	invoker.barrellength = 19.5;
		A_StartSound("weapons/MACStockOut",CHAN_6);
		invoker.weaponstatus[MACG_STOCK]=1;
	}
	action void A_StockRetract(){
	invoker.barrellength = 10.0;
		A_StartSound("weapons/MACStockIn",CHAN_6);
		invoker.weaponstatus[MACG_STOCK]=0;
	}
	action void A_MACRecoil(){
		if(invoker.weaponstatus[MACG_STOCK]>0){
			A_MuzzleClimb(-frandom(0.9,1.),-frandom(1.3,1.6),frandom(0.5,0.6),frandom(0.6,0.8));
		}else{
			A_MuzzleClimb(-frandom(0.4,0.6),-frandom(0.5,0.8),-frandom(0.4,0.6),-frandom(0.5,0.8));
		}
	}
	
		action void A_MACRecoil2(){
		if(invoker.weaponstatus[MACG_STOCK]<1){
						if(hdplayerpawn(self)){
				hdplayerpawn(self).gunbraced=false;
				A_GiveInventory("IsMoving",1);
			}
		}
	}
	int cooldown;
	
	override string,double getpickupsprite(){
	return "MC1P"..((weaponstatus[MACS_MAG]<0)?"C":"A").."0",1.;
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("HD9mMag30")));
			if(nextmagloaded>=30){
				sb.drawimage("CLP3A0",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(3,3));
			}else if(nextmagloaded<1){
				sb.drawimage("CLP3B0",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.,scale:(3,3));
			}else sb.drawbar(
				"CLP3NORM","CLP3GREY",
				nextmagloaded,30,
				(-46,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("HD9mMag30"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM);
		}
		sb.drawwepcounter(hdw.weaponstatus[MACS_AUTO],
			-22,-10,"RBRSA3A7","STFULAUT"
		);
		sb.drawwepnum(hdw.weaponstatus[MACS_MAG],30);
		if(hdw.weaponstatus[MACS_CHAMBER]==2){sb.drawwepdot(-26,-17,(3,2));
		}else if(hdw.weaponstatus[MACS_CHAMBER]==1){sb.drawwepdot(-26,-22,(3,2));
		}else{sb.drawwepdot(-26,-27,(3,2));
		}
	}
		override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
		int cx,cy,cw,ch;
		[cx,cy,cw,ch]=screen.GetClipRect();
		vector2 scc;
		vector2 bobb=bob*1.6;

		{
			sb.SetClipRect(
				-8+bob.x,-4+bob.y,16,10,
				sb.DI_SCREEN_CENTER
			);
			scc=(0.5,0.5);
			bobb.y=clamp(bobb.y,-8,8);
		}
		sb.drawimage(
			"MACS_001",(0,0)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
			alpha:0.9,scale:scc
		);
		sb.SetClipRect(cx,cy,cw,ch);
		sb.drawimage(
			"MACS_000",(0,-1)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
			scale:(0.7,0.7)
		);
	}
	states{
	select0:
		MC2G A 0 A_JumpIf(invoker.weaponstatus[MACG_STOCK]>0,"select0stock");
		MC1G B 0 A_JumpIf(invoker.weaponstatus[MACS_CHAMBER]<1,2);
		MC1G A 0;
		#### # 0;
		goto select0small;
	deselect0:
		MC1G F 0;
		goto deselect0a;
	deselect0a:
		MC2G A 0 A_JumpIf(invoker.weaponstatus[MACG_STOCK]>0,"deselect0stock");
		MC1G B 0 A_JumpIf(invoker.weaponstatus[MACS_CHAMBER]<1,2);
		#### A 0;
		#### # 0;
		goto deselect0small;
	select0stock:
		MC2G B 0 A_JumpIf(invoker.weaponstatus[MACS_CHAMBER]<1,2);
		MC2G A 0;
		#### # 0;
		goto select0bfg;
	deselect0stock:
		MC2G B 0 A_JumpIf(invoker.weaponstatus[MACS_CHAMBER]<1,2);
		MC2G A 0;
		#### # 0;
		goto deselect0bfg;
	ready:
		MC1G A 0 A_JumpIf(invoker.weaponstatus[MACG_STOCK]==1,"ready_s");
		#### # 0{invoker.weaponstatus[MACG_STOCK]=0;}
		MC1G B 0 A_JumpIf(invoker.weaponstatus[MACS_CHAMBER]<1,2);
		MC1G A 0;
		#### # 1{
			A_SetCrosshair(21);
			A_WeaponReady(WRF_ALL);
			}
		goto readyend;
		
	ready_s:
		MC2G B 0 A_JumpIf(invoker.weaponstatus[MACS_CHAMBER]<1,2);
		MC2G A 0;
		#### # 1{
			A_SetCrosshair(21);
			A_WeaponReady(WRF_ALL);
			}
		goto readyend;
		
	user3:
		#### A 0 A_JumpIf(invoker.weaponstatus[MACS_MAG]<1,2);
		#### D 0;
		#### # 0 A_MagManager("HD9mMag30");
		goto ready;
	altfire:
	althold:
		goto nope;
	hold:
		#### A 0{
			if(
				//full auto
				invoker.weaponstatus[MACS_AUTO]==2
			)setweaponstate("fire2");
			else if(
				//burst
				invoker.weaponstatus[MACS_AUTO]<1
			)setweaponstate("nope");
		}goto fire;
	user2:
	firemode:
		---- A 1			{
			int aut=invoker.weaponstatus[MACS_AUTO];
			if(aut>=0){
				invoker.weaponstatus[MACS_AUTO]=aut==0?1:0;
			}
		}goto nope;
	fire:
		#### # 3;
		#### # 0 
		{
		A_JumpIf(invoker.weaponstatus[MACS_MAG]>-1,2);
		if(invoker.weaponstatus[MACS_MAG]<1){
				setweaponstate("BoltEmpty");
			}
		}
		#### # 0;
		#### # 0;
	fire2:
		#### A 0 
				{
		A_JumpIf(invoker.weaponstatus[MACS_MAG]>-1,2);
		if(invoker.weaponstatus[MACS_MAG]<1){
				setweaponstate("BoltEmpty");}
			}	
		#### A 0;
		#### # 0{
			if(invoker.weaponstatus[MACS_CHAMBER]==2
			&&invoker.weaponstatus[MACS_MAG]>0){
				A_GunFlash();
			}else if (invoker.weaponstatus[MACS_CHAMBER]==2
			&&invoker.weaponstatus[MACS_MAG]<0){
				setweaponstate("unloadchamber");
			}else{
				if(invoker.weaponstatus[MACS_MAG]>0){
				setweaponstate("loadchamber");
				}else setweaponstate("nope");
			}
		}
		#### D 1 
		{
		A_WeaponOffset(frandom(-3,3),frandom(40,43));//offset(0,40);
		}
		#### D 0{
			if(invoker.weaponstatus[MACS_CHAMBER]==1){
				A_EjectCasing("HDSpent9mm",5,frandom(-1,2),frandom(0.2,0.3),frandom(0,0.2),spawnheight:0.92,-frandom(7,7.5));
				invoker.weaponstatus[MACS_MAG]--;
				invoker.weaponstatus[MACS_CHAMBER]=0;
				if(invoker.weaponstatus[MACS_MAG]<=0){
					A_StartSound("weapons/MACboltfin",CHAN_WEAPON);
				}
			}
			invoker.weaponstatus[MACS_CHAMBER]=2;
			if(invoker.weaponstatus[MACS_AUTO]==1)A_ReFire("fire2");
			A_WeaponReady(WRF_NOFIRE);
		}
		#### A 0 A_ReFire();
		goto nope;
		
	flash:
		#### A 0{
			let bbb=HDBulletActor.FireBullet(self,"HDB_9",spread:2.,speedfactor:frandom(0.97,1.03));
			if(
				frandom(0,ceilingz-floorz)<bbb.speed*0.3
			)A_AlertMonsters(256);

			A_ZoomRecoil(0.995);
			A_StartSound("weapons/MAC11Shot",CHAN_WEAPON,CHANF_OVERLAP);
			if(invoker.weaponstatus[MACS_AUTO]==1)
			{
			A_MACRecoil();
			A_MuzzleClimb(-frandom(0.4,1.2),-frandom(0.4,1.6));
			}
			invoker.weaponstatus[MACS_CHAMBER]=1;
		}
		MC1F AB 0 bright A_Jump(128,"flashpt2");
		//TNT1 A 0 A_MACRecoil();
		//goto lightdone;
		goto flashpt2;
		
		flashpt2:
		MC1F # 0 bright offset(0,40);
		MC1F # 1 bright{
			HDFlashAlpha(32);
			A_Light1();
			if(invoker.weaponstatus[MACS_AUTO]==0)
			{
			A_MACRecoil();
			A_MuzzleClimb(-frandom(0.4,1.2),-frandom(0.4,1.6));
			}
		}
		//TNT1 A 0 A_MACRecoil();
		goto lightdone;

	BoltEmpty:
		#### B 1 A_JumpIf(invoker.weaponstatus[MACS_CHAMBER]<1,"nope");
		#### B 0{
			invoker.weaponstatus[MACS_CHAMBER]=0;
			A_StartSound("weapons/MACboltfwd",CHAN_7
			);
		}
		goto ready;

	unloadchamber:
		#### A 0 A_JumpIf(invoker.weaponstatus[MACG_STOCK]==1,"unloadchamber_s");
		MC4G A 0 A_JumpIf(invoker.weaponstatus[MACS_MAG]>-1,3);
		#### D 0;
		#### IH 3 A_JumpIf(invoker.weaponstatus[MACS_CHAMBER]<1,"nope");
		#### G 4;
		#### FE 4;
		#### D 4{
			invoker.weaponstatus[MACS_CHAMBER]=0;
			A_StartSound("weapons/MACboltfwd",CHAN_WEAPON
			);
		}
		#### C 3;
		#### B 2;
		#### A 1;
		goto nope;
		
		unloadchamber_s:
		MC5G A 0 A_JumpIf(invoker.weaponstatus[MACS_MAG]>-1,2);
		#### D 0;
		#### IH 3 A_JumpIf(invoker.weaponstatus[MACS_CHAMBER]<1,"nope");
		#### G 4;
		#### FE 4;
		#### D 4{
			invoker.weaponstatus[MACS_CHAMBER]=0;
			A_StartSound("weapons/MACboltfwd",CHAN_WEAPON
			);
		}
		#### C 3;
		#### B 2;
		#### A 1;
		goto nope;
		
	loadchamber:
		#### A 0 A_JumpIf(invoker.weaponstatus[MACG_STOCK]==1,"loadchamber_s");
		MC4G A 0 A_JumpIf(invoker.weaponstatus[MACS_MAG]>-1,2);
		#### A 0;
		#### A 0 A_JumpIf(invoker.weaponstatus[MACS_CHAMBER]>0,"nope");
		#### A 2;
		#### B 2  A_StartSound("weapons/pocket",CHAN_WEAPON);
		#### C 2;
		#### D 3;
		#### E 3 A_StartSound("weapons/MACboltback",CHAN_WEAPON);
		#### F 3 {
				invoker.weaponstatus[MACS_CHAMBER]=2;
			}
		#### G 3;
		#### HI 3;
		goto nope;
		
		loadchamber_s:
		MC5G A 0 A_JumpIf(invoker.weaponstatus[MACS_MAG]>-1,2);
		#### A 0;
		#### A 0 A_JumpIf(invoker.weaponstatus[MACS_CHAMBER]>0,"nope");
		#### A 2;
		#### B 2  A_StartSound("weapons/pocket",CHAN_WEAPON);
		#### C 2;
		#### D 3;
		#### E 3 A_StartSound("weapons/MACboltback",CHAN_WEAPON);
		#### F 3 {
				invoker.weaponstatus[MACS_CHAMBER]=2;
			}
		#### G 3;
		#### HI 3;
		goto nope;
		
user4:
	unload:
		"####" "#" 0{
			invoker.weaponstatus[0]|=MACF_JUSTUNLOAD;
			if(
				invoker.weaponstatus[MACS_MAG]>=0
			)setweaponstate("unmag");
			else if(invoker.weaponstatus[MACS_CHAMBER]>0)setweaponstate("unloadchamber");
		}goto nope;
	reload:
		"####" "#" 0{
			invoker.weaponstatus[0]&=~MACF_JUSTUNLOAD;
			if(invoker.weaponstatus[MACS_MAG]>=30)setweaponstate("nope");
			else if(HDMagAmmo.NothingLoaded(self,"HD9mMag30")){
				if(
					invoker.weaponstatus[MACS_MAG]<0
					&&countinv("HDPistolAmmo")
				)setweaponstate("loadchamber");
				else setweaponstate("nope");
			}
		}goto unmag;
	unmag:
		"####" "#" 1 offset(0,34) A_SetCrosshair(21);
		"####" "#" 1 offset(5,38);
		"####" "#" 1 offset(10,42);
		"####" "#" 2 offset(20,46) A_StartSound("weapons/smgmagclick",CHAN_WEAPON);
		"####" "#" 4 offset(30,52){
			A_MuzzleClimb(0.3,0.4);
			A_StartSound("weapons/smgmagmove",CHAN_WEAPON);
		}
		"####" "#" 0{
			int magamt=invoker.weaponstatus[MACS_MAG];
			if(magamt<0){
				setweaponstate("magout");
				return;
			}
			invoker.weaponstatus[MACS_MAG]=-1;
			if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("HD9mMag30",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"HD9mMag30",magamt);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"HD9mMag30",magamt);
				A_StartSound("weapons/pocket",CHAN_WEAPON);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		"####" "#" 7 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
	magout:
		"####" "#" 0{
			if(invoker.weaponstatus[0]&MACF_JUSTUNLOAD)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}

	loadmag:
		"####" "#" 0 A_StartSound("weapons/pocket",CHAN_WEAPON);
		"####" "#" 0 A_JumpIf(invoker.weaponstatus[MACG_STOCK]<1,2);
		"####" "#" 6 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		"####" "#" 7 offset(34,52) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		"####" "#" 10 offset(32,50);
		"####" "#" 3 offset(32,49){
			let mmm=hdmagammo(findinventory("HD9mMag30"));
			if(mmm){
				invoker.weaponstatus[MACS_MAG]=mmm.TakeMag(true);
				A_StartSound("weapons/smgmagclick",CHAN_BODY);
			}
			if(
				invoker.weaponstatus[MACS_MAG]<1
				||invoker.weaponstatus[MACS_CHAMBER]>0
			)setweaponstate("reloadend");
		}
	reloadend:
		"####" "#" 3 offset(30,52);
		"####" "#" 2 offset(20,46);
		"####" "#" 1 offset(10,42);
		"####" "#" 1 offset(5,38);
		"####" "#" 1 offset(0,34);
		"####" "#" 0{
		if(
				invoker.weaponstatus[MACS_MAG]<1
				||invoker.weaponstatus[MACS_CHAMBER]>0
			)setweaponstate("nope");
		}
		goto loadchamber;
		
	AltFire:
	usestock:
	#### # 3 A_WeaponBusy();
	#### # 0 A_JumpIf(invoker.weaponstatus[MACG_STOCK]>0,"retractstock");
	#### ## 1 A_Lower(3);
	#### ### 1 A_Lower(5);
	#### ## 2 A_Lower(3);
	#### # 2 A_StartSound("weapons/MACStockClick",CHAN_7);
	MC2G # 2 A_StockExtend();
	#### # 0{invoker.weaponstatus[MACG_STOCK]=1;}
	#### ## 2 A_Raise(3);
	#### ### 1 A_Raise(5);
	#### ## 1 A_Raise(3);
	goto nope;
	retractstock:
	#### ## 1 A_Lower(3);
	#### ### 1 A_Lower(5);
	#### ## 2 A_Lower(3);
	#### # 2 A_StockRetract();
	#### # 0{invoker.weaponstatus[MACG_STOCK]=0;}
	MC1G # 2 A_StartSound("weapons/MACStockClick",CHAN_7);
	#### # 0{invoker.weaponstatus[MACG_STOCK]=0;}
	#### ## 2 A_Raise(3);
	#### ### 1 A_Raise(5);
	#### ## 1 A_Raise(3);
	goto nope;

	spawn:
		MC1P ABCD -1 nodelay{
			if(invoker.weaponstatus[MACS_MAG]<0){
				if(invoker.weaponstatus[MACG_STOCK]<1)frame=2;
				else frame=3;
			}else{
				if(invoker.weaponstatus[MACG_STOCK]<1)frame=0;
				else frame=1;
			}
		}stop;
	}
	override void initializewepstats(bool idfa){
		weaponstatus[0]=0;
		weaponstatus[MACS_MAG]=30;
		weaponstatus[MACS_CHAMBER]=2;
		if(!idfa)weaponstatus[MACS_AUTO]=0;
	}
}
enum MAC11status{
	MACF_JUSTUNLOAD=1,

	MACS_FLAGS=0,
	MACS_MAG=1, //-1 unmagged
	MACS_CHAMBER=2, //0 empty, 1 spent, 2 loaded
	MACS_AUTO=3, //0 semi, 1 burst, 2 auto
	MACG_STOCK=4,
};