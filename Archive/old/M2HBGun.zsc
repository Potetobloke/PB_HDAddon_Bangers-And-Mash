// ------------------------------------------------------------
// AutoCannon
// ------------------------------------------------------------

const HDLD_MADEUCE_MAIN="m2h";

class HD_M2HB:HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "Kelenken"
		//$Sprite "M2DRP0"
		-hdweapon.fitsinbackpack
		obituary "%k made %o cease to exist.";
		weapon.selectionorder 24;
		weapon.slotnumber 7;
		weapon.kickback 90;
		weapon.bobrangex 1.8;
		weapon.bobrangey 1.6;
		weapon.bobspeed 1.6;
		scale 0.8;
		inventory.pickupmessage "You got the HMG!";
		hdweapon.barrelsize 35,1,3;
		hdweapon.refid HDLD_MADEUCE_MAIN;
		tag "Brownell AM-HMG50 ''MKII Stinger''"; 
				hdweapon.loadoutcodes "
			\cumodded - 1, Increased RoF in exchange for controllability";
	}
	
	
	override string pickupmessage(){
		if(weaponstatus[KLNKS_MODDED]>0)return string.format("%s Looks like somebody messed with the feed system.....",super.pickupmessage());
		else return string.format("%s",super.pickupmessage());
		return super.pickupmessage();
	}
	
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}

	override double gunmass(){
			return 27.5;
	}
			override void PostBeginPlay()
    {
        weaponspecial = 1337; // [Ace] UaS sling compatibility.
        Super.PostBeginPlay();
    }
	override void tick(){
		super.tick();
		drainheat(M2HBS_HEAT,1);
	}
	
	override double weaponbulk(){
		double blx=200;
		int mgg=weaponstatus[M2HBS_MAG];
		return blx+(mgg<0?0:((ENC_M2HBBELTBOX_EMPTY)+mgg*ENC_50OMG_LOADED));
	}
	
	override void failedpickupunload(){
		failedpickupunloadmag(M2HBS_MAG,"HD_PB_50OMGBeltBox");
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,250);
			if(owner.countinv("HD50OMGAmmo"))owner.A_DropInventory("HD50OMGAmmo",amt*250);
			else owner.A_DropInventory("HD_PB_50OMGBeltBox",amt);
		}
	}
	override void ForceBasicAmmo(){
		owner.A_TakeInventory("HD50OMGAmmo");
		owner.A_TakeInventory("HD_PB_50OMGBeltBox");
		owner.A_GiveInventory("HD_PB_50OMGBeltBox");
	}
	override string,double getpickupsprite(){
		return "M2DRZ0";
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("HD_PB_50OMGBeltBox")));
			if(nextmagloaded>=100){
				sb.drawimage("M2ABA0",(-49,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(1,1));
			}else if(nextmagloaded<1){
				sb.drawimage("M2ABB0",(-49,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.,scale:(1,1));
			}else sb.drawbar(
				"M2BX_NRM","M2BX_GRY",
				nextmagloaded,100,
				(-49,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("HD_PB_50OMGBeltBox"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM);
		}
		sb.drawwepnum(hdw.weaponstatus[M2HBS_MAG],100);
		if(hdw.weaponstatus[M2HBS_CHAMBER]==2)sb.drawwepdot(-16,-10,(3,1));
	}
	
	action void A_ShowAmmoBelt(){
		A_OverlayFlags(5,PSPF_ADDWEAPON,true);
		int belt=invoker.weaponstatus[M2HBS_MAG];
		if(belt>=5)setweaponstate("BeltAnim0",5);
		else if(belt>=4)setweaponstate("BeltAnim1",5);
		else if(belt>=3)setweaponstate("BeltAnim2",5);
		else if(belt>=2)setweaponstate("BeltAnim3",5);
		else setweaponstate("BeltAnim4",5);
	}
	
	action void A_ShowAmmoBeltF(){
		A_OverlayFlags(5,PSPF_ADDWEAPON,true);
		int belt=invoker.weaponstatus[M2HBS_MAG];
		if(belt>=5)setweaponstate("BeltAnimFiring0",5);
		else if(belt>=4)setweaponstate("BeltAnimFiring1",5);
		else if(belt>=3)setweaponstate("BeltAnimFiring2",5);
		else if(belt>=2)setweaponstate("BeltAnimFiring3",5);
		else setweaponstate("BeltAnimFiring4",5);
	}
	
	action void A_ShowAmmoBeltC(){
		A_OverlayFlags(5,PSPF_ADDWEAPON,true);
		int belt=invoker.weaponstatus[M2HBS_MAG];
		if(belt>=5)setweaponstate("BeltAnimCharging0",5);
		else if(belt>=4)setweaponstate("BeltAnimCharging1",5);
		else if(belt>=3)setweaponstate("BeltAnimCharging2",5);
		else if(belt>=2)setweaponstate("BeltAnimCharging3",5);
		else setweaponstate("BeltAnimCharging4",5);
	}
	
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_RELOAD.."  Reload\n"
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOADUNLOAD
		;
	}
	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
		int cx,cy,cw,ch;
		[cx,cy,cw,ch]=screen.GetClipRect();
		sb.SetClipRect(
			-16+bob.x,-8+bob.y,32,20,
			sb.DI_SCREEN_CENTER
		);
		vector2 bobb=bob*3;
		bobb.y=clamp(bobb.y,-8,8);
		sb.drawimage(
			"M2HBftst",(0,-4)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			alpha:0.9,scale:(0.65,0.65)
		);
		sb.SetClipRect(cx,cy,cw,ch);
		sb.drawimage(
			"M2HBbkst",(0,-8)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			scale:(0.55,0.55)
		);
	}
	states{
		
	droop:
		TNT1 A 1{
			if(pitch<frandom(21,22)&&(!gunbraced())){
				if( countinv("PowerStrength")<1){    
					A_MuzzleClimb(frandom(-0.075,0.075),
						frandom(0.1,clamp(1-pitch,0.05,0.6)));
				}else{
					A_MuzzleClimb(frandom(-0.045,0.045),
						frandom(0.1,clamp(1-pitch,0.03,0.4)));
				}
			}
		}loop;
		
	
	select0:
		M2B1 A 0 A_JumpIf(invoker.weaponstatus[M2HBS_MAG]<0,2);
		M2B0 A 0;
		#### A 0 A_Overlay(2,"droop");
		#### A 0 A_Overlay(5,"BeltAnim");
		#### A 0;
		goto select0bfg;
	deselect0:
		M2B1 A 0 A_JumpIf(invoker.weaponstatus[M2HBS_MAG]<0,2);
		M2B0 A 0;
		#### A 0;
		goto deselect0bfg;

	ready:
		M2B1 A 0 A_JumpIf(invoker.weaponstatus[M2HBS_MAG]<0,2);
		M2B0 A 0;
		#### A 0;
		#### A 1{
			A_SetCrosshair(21);
			A_WeaponReady(WRF_ALL);
		}
		goto readyend;
	user3:
		---- A 0 A_MagManager("HD_PB_50OMGBeltBox");
		goto ready;
	altfire:
	althold:
		goto nope;
	hold:
		#### A 1;
		goto nope;
	fire:
		M2B1 A 0 A_JumpIf(invoker.weaponstatus[M2HBS_MAG]<0,2);
		M2B0 A 0;
		#### A 2;
	fire2:
		#### A 0{
			if(invoker.weaponstatus[M2HBS_CHAMBER]==2){
				A_GunFlash();
				A_WeaponOffset(frandom(-3,3),frandom(-3,3),WOF_ADD);
				setweaponstate("BeltAnimFiring",5);
			}else{
				if(invoker.weaponstatus[M2HBS_MAG]>0)setweaponstate("chamber");
				else setweaponstate("nope");
			}
		}
		#### HG 1;
		#### H 1{
			if(invoker.weaponstatus[M2HBS_CHAMBER]==1){
				/*A_SpawnItemEx("HDSpent50OMG",
					cos(pitch)*10,0,height-10-sin(pitch)*10,
					vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				A_SpawnItemEx("HDFlyingBeltLink_12MM",
					cos(pitch)*10,0,height-10-sin(pitch)*10,
					vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);*/
				A_SpawnItemEx("HDSpent50OMG",
				cos(pitch)*8,0,height-9-sin(pitch)*8,
				vel.x+cos(pitch)*cos(angle-random(86,90))*9,
				vel.y+cos(pitch)*sin(angle-random(86,90))*9,
				vel.z+sin(pitch)*random(4,6),
				0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				
				A_SpawnItemEx("HDFlyingBeltLink_12MM",
				cos(pitch)*8,0,height-9-sin(pitch)*8,
				vel.x+cos(pitch)*cos(angle-random(86,90))*5,
				vel.y+cos(pitch)*sin(angle-random(86,90))*5,
				vel.z+sin(pitch)*random(4,6),
				0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				invoker.weaponstatus[M2HBS_CHAMBER]=0;
			}
			if(invoker.weaponstatus[M2HBS_MAG]>0){
				invoker.weaponstatus[M2HBS_MAG]--;
				invoker.weaponstatus[M2HBS_CHAMBER]=2;
			}
		}
		#### IJ 1 
			{
				if(invoker.weaponstatus[M2HBS_MODDED]==1)
					{
						A_ReFire("fire2");
						if(gunbraced())
							{hdplayerpawn(self).gunbraced=false;
							A_GiveInventory("IsMoving",7);}
					}
			}
		#### J 1 A_ReFire("fire2");
		goto readyend;
	flash:
		M2BF A 0{
			let bbb=HDBulletActor.FireBullet(self,"HDB_ShAK_APEX",speedfactor:1.1); //HDB_50OMG
			if(
				frandom(32,ceilingz-floorz)<bbb.speed*0.2
			)A_AlertMonsters(200);

			A_ZoomRecoil(0.98);
			A_StartSound("weapons/50calMG/fire",CHAN_WEAPON,0,1.50);
			invoker.weaponstatus[M2HBS_CHAMBER]=1;
			invoker.weaponstatus[M2HBS_HEAT]+=6;
		}
		M2BF A 0 bright{
			HDFlashAlpha(15);
			A_Light1();
		}
		M2BF A 1 bright
		{
			if(gunbraced())A_MuzzleClimb(0,0,-frandom(0.1,0.3),-frandom(0.4,0.8));
			else {A_GiveInventory("IsMoving",3);
			A_MuzzleClimb(0,0,-frandom(-1.3,1.7),-frandom(4.4,4.8));}
			if(!binvulnerable
				&&(
					countinv("IsMoving")>7
					||floorz<pos.z
				)
			){
				A_GiveInventory("IsMoving",1);
			}
		}
		M2BF B 1 bright{
			//A_ZoomRecoil(0.5);
			A_Light0();
		}
		stop;
		goto lightdone;


	unloadchamber:
		M2B1 A 0 A_JumpIf(invoker.weaponstatus[M2HBS_MAG]<0,2);
		M2B0 A 0;
		#### A 2 A_JumpIf(invoker.weaponstatus[M2HBS_CHAMBER]<1,"nope");
		//#### A 0 setweaponstate("BeltAnimCharging",5);
		#### B 3 setweaponstate("BeltAnimCharging",5);
		#### C 3 {
			A_StartSound("weapons/50calMG/cock1",CHAN_7,0,0.4);
			
			class<actor>which=invoker.weaponstatus[M2HBS_CHAMBER]>1?"HD50OMGAmmo":"HDSpent50OMG";
			invoker.weaponstatus[M2HBS_CHAMBER]=0;
			A_SpawnItemEx(which,
				cos(pitch)*10,0,height-8-sin(pitch)*10,
				vel.x,vel.y,vel.z,
				0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
			A_SpawnItemEx("HDFlyingBeltLink_12MM",
				cos(pitch)*10,0,height-10-sin(pitch)*10,
				vel.x,vel.y,vel.z,
				0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
		}
		#### DEF 2;
		#### K 2 A_StartSound("weapons/50calMG/cock2",CHAN_7,0,0.4);
		#### A 4; //offset(2,36); //A_StartSound("weapons/devincenzia/fwd",CHAN_6,0,0.5);
		goto readyend;
	user4:
	unload:
		M2B1 A 0 A_JumpIf(invoker.weaponstatus[M2HBS_MAG]<0,2);
		M2B0 A 0;
		#### A 0{
			invoker.weaponstatus[0]|=M2HBF_JUSTUNLOAD;
			if(
				invoker.weaponstatus[M2HBS_MAG]>=0
			)setweaponstate("unmag");
			else if(invoker.weaponstatus[M2HBS_CHAMBER]>0)setweaponstate("unloadchamber");
		}goto nope;
	reload:
		M2B1 A 0 A_JumpIf(invoker.weaponstatus[M2HBS_MAG]<0,2);
		M2B0 A 0;
		#### A 0{
			invoker.weaponstatus[0]&=~M2HBF_JUSTUNLOAD;
			if(invoker.weaponstatus[M2HBS_MAG]>=250)setweaponstate("nope");
			else if(HDMagAmmo.NothingLoaded(self,"HD_PB_50OMGBeltBox")){
				if(
					invoker.weaponstatus[M2HBS_MAG]<0
					&&countinv("HD50OMGAmmo")
				)setweaponstate("nope");
				else setweaponstate("nope");
				}
			}
			goto unmag;
	unmag:
		M2B1 A 0 A_JumpIf(invoker.weaponstatus[M2HBS_MAG]<0,2);
		M2B0 A 0;
		#### A 1 offset(0,34) A_SetCrosshair(21);
		#### A 2 offset(-5,38);
		#### A 2 offset(-10,42);
		#### A 3 offset(-20,46);
		#### A 4 offset(-30,52);
		#### A 4 offset(-40,57);
		#### A 5 offset(-45,63);
		#### A 5 offset(-50,72);
		#### A 5 offset(-51,85);
		#### A 6 offset(-52,87){
			A_MuzzleClimb(0.3,0.4);
		}
		#### A 6 offset(-52,89){
			A_MuzzleClimb(0.3,0.4);
		}
	openlid:
		M2B2 N 3 A_ClearOverlays(5,5,true);
		M2B2 A 0 A_StartSound("weapons/50calMG/open",CHAN_7,volume:0.75);
		M2B2 ABBCD 2;
	removebox:
		---- A 0 
		{
		int magamt=invoker.weaponstatus[M2HBS_MAG];
			if(magamt<0){
				setweaponstate("magout");
				return;
			}
		}
		M2B2 EFG 3;
		M2B2 H 3 A_StartSound("weapons/50calMG/boxout",CHAN_6,volume:0.4);
		M2B2 IJKLM 3;
		#### M 0{
			int magamt=invoker.weaponstatus[M2HBS_MAG];
			invoker.weaponstatus[M2HBS_MAG]=-1;
			if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("HD_PB_50OMGBeltBox",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"HD_PB_50OMGBeltBox",magamt);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"HD_PB_50OMGBeltBox",magamt);
				A_StartSound("weapons/pocket",CHAN_WEAPON);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		 M2B2 MMM 7 offset(-54,88) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
	magout:
		#### A 0{
			if(invoker.weaponstatus[0]&M2HBF_JUSTUNLOAD)setweaponstate("closelid");
			else setweaponstate("loadmag");
		}

	loadmag:
		M2B2 M 2 offset(-54,90) A_StartSound("weapons/pocket",CHAN_WEAPON);
		#### M 7 offset(-54,94) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### M 11 offset(-54,92) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### M 14 offset(-52,90);
		#### LKJJIII 3;
		#### H 5 A_StartSound("weapons/50calMG/boxin",CHAN_6,volume:0.4);
		#### GFE 3;
		#### M 2 offset(-52,89){
			let mmm=hdmagammo(findinventory("HD_PB_50OMGBeltBox"));
			if(mmm){
				invoker.weaponstatus[M2HBS_MAG]=mmm.TakeMag(true);
				//A_StartSound("weapons/kelenken/magin",CHAN_BODY);
			}
		//	if(
		//		invoker.weaponstatus[M2HBS_MAG]<1
		//		||invoker.weaponstatus[M2HBS_CHAMBER]>0
		//	)setweaponstate("closelid");
		}
		#### M 8 offset(-52,91);
		#### M 5 offset(-52,95);
		goto closelid;
	closelid:
		#### DCB 3;
		#### A 3 A_StartSound("weapons/50calMG/close",CHAN_7,volume:0.75);
		#### N 3 offset(-54,99);
		#### N 3 offset(-53,96);
		#### N 3 offset(-52,95);
		#### O 7 A_ShowAmmoBelt();
			goto reloadend;
	chamber:
		M2B0 A 3;
		//#### A 0 setweaponstate("BeltAnimCharging",5);
		#### B 3 setweaponstate("BeltAnimCharging",5);
		#### C 3{
			A_StartSound("weapons/50calMG/cock1",CHAN_7,0,0.4);
			if(invoker.weaponstatus[M2HBS_CHAMBER]==1){
				A_SpawnItemEx("HDSpent50OMG",
					cos(pitch)*10,0,height-10-sin(pitch)*10,
					vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				A_SpawnItemEx("HDFlyingBeltLink_12MM",
					cos(pitch)*10,0,height-10-sin(pitch)*10,
					vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				invoker.weaponstatus[M2HBS_CHAMBER]=0;
			}
			if(invoker.weaponstatus[M2HBS_MAG]>0){
				invoker.weaponstatus[M2HBS_MAG]--;
				invoker.weaponstatus[M2HBS_CHAMBER]=2;
			}
		}
		//#### D 1 A_StartSound("weapons/50calMG/cock1",CHAN_7,0,0.7);
		#### DEF 2;
		#### K 2 A_StartSound("weapons/50calMG/cock2",CHAN_7,0,0.4);
		goto nope;

	reloadend:
		M2B1 A 0 A_JumpIf(invoker.weaponstatus[M2HBS_MAG]<0,2);
		M2B0 A 0;
		#### A 5 offset(-51,91);
		#### A 5 offset(-49,88);
		#### A 5 offset(-47,68);
		#### A 4 offset(-45,62);
		#### A 3 offset(-40,54);
		#### A 3 offset(-30,52);
		#### A 2 offset(-20,46);
		#### A 2 offset(-10,42);
		#### A 1 offset(-5,38);
		#### A 1 offset(-1,33);
		#### A 1 offset(0,32){
		if(
			invoker.weaponstatus[M2HBS_MAG]>1
				&&invoker.weaponstatus[M2HBS_CHAMBER]<1
			)setweaponstate("chamber");
		}
		goto nope;
	
	//man
	
	BeltAnim:
		#### A 1 A_ShowAmmoBelt();
		goto BeltAnim;
		
	BeltAnim0: M2A0 A 1; goto BeltAnim;
	BeltAnim1: M2A1 A 1; goto BeltAnim;
	BeltAnim2: M2A2 A 1; goto BeltAnim;
	BeltAnim3: M2A3 A 1; goto BeltAnim;
	BeltAnim4: TNT1 A 1; goto BeltAnim;
	
	BeltAnimFiring:
		#### K 1 A_ShowAmmoBeltF();
		goto beltanim;
	
	BeltAnimFiring0: M2A0 GHIJKK 1; goto BeltAnim;
	BeltAnimFiring1: M2A1 GHIJKK 1; goto BeltAnim;
	BeltAnimFiring2: M2A2 GHIJKK 1; goto BeltAnim;
	BeltAnimFiring3: M2A3 GHIJKK 1; goto BeltAnim;
	BeltAnimFiring4: TNT1 AAAAAA 1; goto BeltAnim;
	
	BeltAnimCharging:
		#### K 0 A_ShowAmmoBeltC();
		goto beltanim;
	BeltAnimCharging0: M2A0 BBBCCCDDEEFFGGLL 1; goto BeltAnim;
	BeltAnimCharging1: M2A1 BBBCCCDDEEFFGGLL 1; goto BeltAnim;
	BeltAnimCharging2: M2A2 BBBCCCDDEEFFGGLL 1; goto BeltAnim;
	BeltAnimCharging3: M2A3 BBBCCCDDEEFFGGLL 1; goto BeltAnim;
	BeltAnimCharging4: TNT1 AAAAAAAAAAAAAAAA 1; goto BeltAnim;

	spawn:
		M2DR Z -1;
		stop;
	}
	override void initializewepstats(bool idfa){
		weaponstatus[0]=0;
		weaponstatus[M2HBS_MAG]=100;
		weaponstatus[M2HBS_CHAMBER]=2;
	}
	override void loadoutconfigure(string input){
		int modded=getloadoutvar(input,"modded",1);
		if(modded>0)weaponstatus[M2HBS_MODDED]=clamp(modded,0,1);
	}
}

enum hdmadeucestatus{
	M2HBF_JUSTUNLOAD=1,

	M2HBS_FLAGS=0,
	M2HBS_MAG=1,
	M2HBS_CHAMBER=2,
	M2HBS_HEAT=3,
	M2HBS_MODDED=4,
};
